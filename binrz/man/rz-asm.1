.Dd Jan 22, 2024
.Dt RZ_ASM 1
.Sh NAME
.Nm rz-asm
.Nd rizin assembler and disassembler tool
.Sh SYNOPSIS
.Nm rz-asm
.Op Fl ABCdDeIEhjLpqrvxw
.Op Fl a Ar arch
.Op Fl b Ar bits
.Op Fl c Ar CPU
.Op Fl O Ar file
.Op Fl o Ar addr
.Op Fl @ Ar addr
.Op Fl f Ar file
.Op Fl F Ar in:out
.Op Fl i Ar len
.Op Fl k Ar kernel
.Op Fl s Ar syntax
.Op Fl l Ar len
.Sh DESCRIPTION
This command is part of the Rizin project.
.Pp
This tool uses RzAsm to assemble and disassemble files or hexpair strings. It supports a large list of architectures which can be listed using the \-L flag.
.Pp
.Bl -tag -width Fl
.It Fl a Ar arch
Set architecture to assemble/disassemble (see -L)
.It Fl A
Show analysis information from given hexpairs
.It Fl b Ar bits
Set CPU register size (8, 16, 32, 64) (RZ_ASM_BITS)
.It Fl B
Binary input/output (-l is mandatory for binary input)
.It Fl c Ar CPU
Select specific CPU (depends on the arch)
.It Fl C
Output in C format
.It Fl d, D
Disassemble from hexpair bytes (-D show hexpairs)
.It Fl e
Use big endian instead of little endian
.It Fl I
Display lifted RzIL code (same input as in -d, IL is also validated)
.It Fl E
Display ESIL expression (same input as in -d)
.It Fl f Ar file
Read data from file
.It Fl F Ar in:out
Specify input and/or output filters (att2intel, x86.pseudo, ...)
.It Fl h, hh
Show usage help message, hh for long
.It Fl i Ar len
Ignore N bytes of the input buffer
.It Fl j
Output in JSON format
.It Fl k Ar kernel
Select operating system (linux, windows, darwin, ..)
.It Fl l Ar len
Input/Output length
.It Fl L
List asm plugins: (a=asm, d=disasm, A=analyze, e=ESIL)
.It Fl o, @ Ar addr
Set start address for code (default 0)
.It Fl O Ar file
Output file name (rz-asm -Bf a.asm -O a)
.It Fl p
Run SPP over input for assembly
.It Fl q
Quiet mode
.It Fl r
Output in rizin commands
.It Fl s Ar syntax
Select syntax (intel, att)
.It Fl v
Show version information
.It Fl x
Use hex dwords instead of hex pairs when assembling
.It Fl w
Describe opcode
.El
.Sh Directives
.Pp
.Bl -tag -width
.It Ic .intel_syntax
Use Intel syntax rather than AT&T
.It Ic .att_syntax
Use AT&T syntax rather than Intel
.It Ic string
.It Ic .align
.It Ic .arch
.It Ic .arm
.It Ic .ascii
.It Ic .bits
.It Ic .data
.It Ic .equ
.It Ic .fill
.It Ic .glob
.It Ic .hex
.It Ic .int16
.It Ic .int32
.It Ic .int64
.It Ic .kernel
.It Ic .offset
.It Ic .org
.It Ic .os
.It Ic .short
.It Ic .text
.It Ic .thumb
.El
.Sh EXAMPLES
.Pp
Assemble opcode:
.Pp
  $ rz-asm \-a x86 \-b 32 'mov eax, 33'
.Pp
Disassemble opcode:
.Pp
  $ rz-asm \-d 90
.Sh SEE ALSO
.Pp
.Xr rizin(1) ,
.Xr rz-find(1) ,
.Xr rz-hash(1) ,
.Xr rz-bin(1) ,
.Xr rz-diff(1) ,
.Xr rz-gg(1) ,
.Xr rz-run(1) ,
.Xr rz-ax(1) ,
.Sh AUTHORS
.Pp
pancake <pancake@nopcode.org>.
.Pp
byteninjaa0.
