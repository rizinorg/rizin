a "lea rax, [0x1000]" 488d05f90f0000 0x0 (set rax (+ (bv 64 0x0) (bv 64 0xff9)))
d "lea rax, [rip + 0xff9]" 488d05f90f0000 0x0 (set rax (+ (bv 64 0x0) (bv 64 0xff9)))
ad "leave" c9 0x0 (seq (set rsp (var rbp)) (set rsp (+ (var rsp) (bv 64 0x8))) (set rbp (loadw 0 64 (+ (var rsp) (bv 64 0x0)))))
d "leave" 66c9 0x0 (seq (set rsp (var rbp)) (set rsp (+ (var rsp) (bv 64 0x4))) (set rbp (| (& (var rbp) (~ (bv 64 0xffffffff))) (cast 64 false (loadw 0 32 (+ (var rsp) (bv 64 0x0)))))))
ad "nop" 90 0x0 nop
ad "ret" c3 0x0 (seq (set rsp (+ (var rsp) (bv 64 0x8))) (set rsp (loadw 0 64 (+ (var rsp) (bv 64 0x0)))))
a "add r13, r15" 4d01fd 0x0 (seq (set op1 (var r13)) (set op2 (var r15)) (set sum (+ (var op1) (var op2))) (set r13 (var sum)) (set _result (var sum)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sum)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (msb (var _x)) (msb (var _y))) (&& (! (msb (var _result))) (msb (var _y)))) (&& (msb (var _x)) (! (msb (var _result)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))))
a "add r15, rbx" 4901df 0x0 (seq (set op1 (var r15)) (set op2 (var rbx)) (set sum (+ (var op1) (var op2))) (set r15 (var sum)) (set _result (var sum)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sum)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (msb (var _x)) (msb (var _y))) (&& (! (msb (var _result))) (msb (var _y)))) (&& (msb (var _x)) (! (msb (var _result)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))))
a "add rax, 44" 4883c02c 0x0 (seq (set op1 (var rax)) (set op2 (bv 64 0x2c)) (set sum (+ (var op1) (var op2))) (set rax (var sum)) (set _result (var sum)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sum)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (msb (var _x)) (msb (var _y))) (&& (! (msb (var _result))) (msb (var _y)))) (&& (msb (var _x)) (! (msb (var _result)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))))
a "add rax, r8" 4c01c0 0x0 (seq (set op1 (var rax)) (set op2 (var r8)) (set sum (+ (var op1) (var op2))) (set rax (var sum)) (set _result (var sum)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sum)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (msb (var _x)) (msb (var _y))) (&& (! (msb (var _result))) (msb (var _y)))) (&& (msb (var _x)) (! (msb (var _result)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))))
a "add r10, r9" 4d01ca 0x0 (seq (set op1 (var r10)) (set op2 (var r9)) (set sum (+ (var op1) (var op2))) (set r10 (var sum)) (set _result (var sum)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sum)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (msb (var _x)) (msb (var _y))) (&& (! (msb (var _result))) (msb (var _y)))) (&& (msb (var _x)) (! (msb (var _result)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))))
a "add rax, rcx" 4801c8 0x0 (seq (set op1 (var rax)) (set op2 (var rcx)) (set sum (+ (var op1) (var op2))) (set rax (var sum)) (set _result (var sum)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sum)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (msb (var _x)) (msb (var _y))) (&& (! (msb (var _result))) (msb (var _y)))) (&& (msb (var _x)) (! (msb (var _result)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))))
aB "and dword [ebp + 128], eax" 48218580000000
a "call rbx" ffd3 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
a "cdqe" 4898 0x0 empty
d "cmp qword [rax], 0x21" 48833821 0x0 (seq (set op1 (loadw 0 64 (+ (var rax) (bv 64 0x0)))) (set op2 (bv 64 0x21)) (set sub (- (var op1) (var op2))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "cmp rax, 33" 4883f821 0x0 (seq (set op1 (var rax)) (set op2 (bv 64 0x21)) (set sub (- (var op1) (var op2))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "cmp rax, rbx" 4839d8 0x0 (seq (set op1 (var rax)) (set op2 (var rbx)) (set sub (- (var op1) (var op2))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "cmp rbx, rax" 4839c3 0x0 (seq (set op1 (var rbx)) (set op2 (var rax)) (set sub (- (var op1) (var op2))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "cmp rdx, rsi" 4839f2 0x0 (seq (set op1 (var rdx)) (set op2 (var rsi)) (set sub (- (var op1) (var op2))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "cmpsb" a6 0x0 (seq (set _src1 (loadw 0 8 (var rsi))) (set _src2 (loadw 0 8 (var rdi))) (set _temp (- (var _src1) (var _src2))) (set _result (var _temp)) (set _x (var _src1)) (set _y (var _src2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (seq (set rsi (- (var rsi) (bv 64 0x1))) (set rdi (- (var rdi) (bv 64 0x1)))) (seq (set rsi (+ (var rsi) (bv 64 0x1))) (set rdi (+ (var rdi) (bv 64 0x1))))))
a "cmpsd" a7 0x0 (seq (set _src1 (loadw 0 32 (var rsi))) (set _src2 (loadw 0 32 (var rdi))) (set _temp (- (var _src1) (var _src2))) (set _result (var _temp)) (set _x (var _src1)) (set _y (var _src2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (seq (set rsi (- (var rsi) (bv 64 0x4))) (set rdi (- (var rdi) (bv 64 0x4)))) (seq (set rsi (+ (var rsi) (bv 64 0x4))) (set rdi (+ (var rdi) (bv 64 0x4))))))
a "cmpsw" 66a7 0x0 (seq (set _src1 (loadw 0 16 (var rsi))) (set _src2 (loadw 0 16 (var rdi))) (set _temp (- (var _src1) (var _src2))) (set _result (var _temp)) (set _x (var _src1)) (set _y (var _src2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (seq (set rsi (- (var rsi) (bv 64 0x2))) (set rdi (- (var rdi) (bv 64 0x2)))) (seq (set rsi (+ (var rsi) (bv 64 0x2))) (set rdi (+ (var rdi) (bv 64 0x2))))))
d "cmpsd dword [esi], dword ptr [edi]" 67a7 0x0 (seq (set _src1 (loadw 0 32 (cast 64 false (cast 32 false (var rsi))))) (set _src2 (loadw 0 32 (cast 64 false (cast 32 false (var rdi))))) (set _temp (- (var _src1) (var _src2))) (set _result (var _temp)) (set _x (var _src1)) (set _y (var _src2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (seq (set rsi (| (& (var rsi) (~ (bv 64 0xffffffff))) (cast 64 false (- (cast 32 false (var rsi)) (bv 32 0x4))))) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (- (cast 32 false (var rdi)) (bv 32 0x4)))))) (seq (set rsi (| (& (var rsi) (~ (bv 64 0xffffffff))) (cast 64 false (+ (cast 32 false (var rsi)) (bv 32 0x4))))) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (+ (cast 32 false (var rdi)) (bv 32 0x4))))))))
d "cmpsq qword [rsi], qword ptr [rdi]" 48a7 0x0 (seq (set _src1 (loadw 0 64 (var rsi))) (set _src2 (loadw 0 64 (var rdi))) (set _temp (- (var _src1) (var _src2))) (set _result (var _temp)) (set _x (var _src1)) (set _y (var _src2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (seq (set rsi (- (var rsi) (bv 64 0x8))) (set rdi (- (var rdi) (bv 64 0x8)))) (seq (set rsi (+ (var rsi) (bv 64 0x8))) (set rdi (+ (var rdi) (bv 64 0x8))))))
a "lodsb" ac 0x0 (seq (set rax (| (& (var rax) (~ (bv 64 0xff))) (cast 64 false (loadw 0 8 (var rsi))))) (branch (var df) (set rsi (- (var rsi) (bv 64 0x1))) (set rsi (+ (var rsi) (bv 64 0x1)))))
a "lodsd" ad 0x0 (seq (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (loadw 0 32 (var rsi))))) (branch (var df) (set rsi (- (var rsi) (bv 64 0x4))) (set rsi (+ (var rsi) (bv 64 0x4)))))
a "lodsw" 66ad 0x0 (seq (set rax (| (& (var rax) (~ (bv 64 0xffff))) (cast 64 false (loadw 0 16 (var rsi))))) (branch (var df) (set rsi (- (var rsi) (bv 64 0x2))) (set rsi (+ (var rsi) (bv 64 0x2)))))
d "lodsd eax, dword [esi]" 67ad 0x0 (seq (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (loadw 0 32 (cast 64 false (cast 32 false (var rsi))))))) (branch (var df) (set rsi (| (& (var rsi) (~ (bv 64 0xffffffff))) (cast 64 false (- (cast 32 false (var rsi)) (bv 32 0x4))))) (set rsi (| (& (var rsi) (~ (bv 64 0xffffffff))) (cast 64 false (+ (cast 32 false (var rsi)) (bv 32 0x4)))))))
d "lodsq rax, qword [rsi]" 48ad 0x0 (seq (set rax (loadw 0 64 (var rsi))) (branch (var df) (set rsi (- (var rsi) (bv 64 0x8))) (set rsi (+ (var rsi) (bv 64 0x8)))))
d "loop 0" 67e2fd 0x0 (seq (set rcx (| (& (var rcx) (~ (bv 64 0xffffffff))) (cast 64 false (- (cast 32 false (var rcx)) (bv 32 0x1))))) (branch (! (is_zero (cast 32 false (var rcx)))) (jmp (bv 64 0x0)) nop))
a "movsb" a4 0x0 (seq (storew 0 (var rdi) (loadw 0 8 (var rsi))) (branch (var df) (seq (set rsi (- (var rsi) (bv 64 0x1))) (set rdi (- (var rdi) (bv 64 0x1)))) (seq (set rsi (+ (var rsi) (bv 64 0x1))) (set rdi (+ (var rdi) (bv 64 0x1))))))
a "movsd" a5 0x0 (seq (storew 0 (var rdi) (loadw 0 32 (var rsi))) (branch (var df) (seq (set rsi (- (var rsi) (bv 64 0x4))) (set rdi (- (var rdi) (bv 64 0x4)))) (seq (set rsi (+ (var rsi) (bv 64 0x4))) (set rdi (+ (var rdi) (bv 64 0x4))))))
a "movsw" 66a5 0x0 (seq (storew 0 (var rdi) (loadw 0 16 (var rsi))) (branch (var df) (seq (set rsi (- (var rsi) (bv 64 0x2))) (set rdi (- (var rdi) (bv 64 0x2)))) (seq (set rsi (+ (var rsi) (bv 64 0x2))) (set rdi (+ (var rdi) (bv 64 0x2))))))
d "movsd dword [edi], dword ptr [esi]" 67a5 0x0 (seq (storew 0 (cast 64 false (cast 32 false (var rdi))) (loadw 0 32 (cast 64 false (cast 32 false (var rsi))))) (branch (var df) (seq (set rsi (| (& (var rsi) (~ (bv 64 0xffffffff))) (cast 64 false (- (cast 32 false (var rsi)) (bv 32 0x4))))) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (- (cast 32 false (var rdi)) (bv 32 0x4)))))) (seq (set rsi (| (& (var rsi) (~ (bv 64 0xffffffff))) (cast 64 false (+ (cast 32 false (var rsi)) (bv 32 0x4))))) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (+ (cast 32 false (var rdi)) (bv 32 0x4))))))))
d "movsq qword [rdi], qword ptr [rsi]" 48a5 0x0 (seq (storew 0 (var rdi) (loadw 0 64 (var rsi))) (branch (var df) (seq (set rsi (- (var rsi) (bv 64 0x8))) (set rdi (- (var rdi) (bv 64 0x8)))) (seq (set rsi (+ (var rsi) (bv 64 0x8))) (set rdi (+ (var rdi) (bv 64 0x8))))))
a "stosb" aa 0x0 (seq (storew 0 (var rdi) (cast 8 false (var rax))) (branch (var df) (set rdi (- (var rdi) (bv 64 0x1))) (set rdi (+ (var rdi) (bv 64 0x1)))))
a "stosd" ab 0x0 (seq (storew 0 (var rdi) (cast 32 false (var rax))) (branch (var df) (set rdi (- (var rdi) (bv 64 0x4))) (set rdi (+ (var rdi) (bv 64 0x4)))))
a "stosw" 66ab 0x0 (seq (storew 0 (var rdi) (cast 16 false (var rax))) (branch (var df) (set rdi (- (var rdi) (bv 64 0x2))) (set rdi (+ (var rdi) (bv 64 0x2)))))
d "stosd dword [edi], eax" 67ab 0x0 (seq (storew 0 (cast 64 false (cast 32 false (var rdi))) (cast 32 false (var rax))) (branch (var df) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (- (cast 32 false (var rdi)) (bv 32 0x4))))) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (+ (cast 32 false (var rdi)) (bv 32 0x4)))))))
d "stosq qword [rdi], rax" 48ab 0x0 (seq (storew 0 (var rdi) (var rax)) (branch (var df) (set rdi (- (var rdi) (bv 64 0x8))) (set rdi (+ (var rdi) (bv 64 0x8)))))
a "scasb" ae 0x0 (seq (set _reg (cast 8 false (var rax))) (set _src (loadw 0 8 (var rdi))) (set _temp (- (var _reg) (var _src))) (set _result (var _temp)) (set _x (var _reg)) (set _y (var _src)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (set rdi (- (var rdi) (bv 64 0x1))) (set rdi (+ (var rdi) (bv 64 0x1)))))
a "scasd" af 0x0 (seq (set _reg (cast 32 false (var rax))) (set _src (loadw 0 32 (var rdi))) (set _temp (- (var _reg) (var _src))) (set _result (var _temp)) (set _x (var _reg)) (set _y (var _src)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (set rdi (- (var rdi) (bv 64 0x4))) (set rdi (+ (var rdi) (bv 64 0x4)))))
a "scasw" 66af 0x0 (seq (set _reg (cast 16 false (var rax))) (set _src (loadw 0 16 (var rdi))) (set _temp (- (var _reg) (var _src))) (set _result (var _temp)) (set _x (var _reg)) (set _y (var _src)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (set rdi (- (var rdi) (bv 64 0x2))) (set rdi (+ (var rdi) (bv 64 0x2)))))
d "scasd eax, dword [edi]" 67af 0x0 (seq (set _reg (cast 32 false (var rax))) (set _src (loadw 0 32 (cast 64 false (cast 32 false (var rdi))))) (set _temp (- (var _reg) (var _src))) (set _result (var _temp)) (set _x (var _reg)) (set _y (var _src)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (- (cast 32 false (var rdi)) (bv 32 0x4))))) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (+ (cast 32 false (var rdi)) (bv 32 0x4)))))))
d "scasq rax, qword [rdi]" 48af 0x0 (seq (set _reg (var rax)) (set _src (loadw 0 64 (var rdi))) (set _temp (- (var _reg) (var _src))) (set _result (var _temp)) (set _x (var _reg)) (set _y (var _src)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))) (set _result (var _temp)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (branch (var df) (set rdi (- (var rdi) (bv 64 0x8))) (set rdi (+ (var rdi) (bv 64 0x8)))))
ad "mul rax" 48f7e0 0x0 (seq (set _mul (* (cast 128 false (var rax)) (cast 128 false (var rax)))) (set rdx (cast 64 false (>> (var _mul) (bv 8 0x40) false))) (set rax (cast 64 false (var _mul))) (branch (is_zero (>> (var _mul) (bv 8 0x40) false)) (seq (set of false) (set cf false)) (seq (set of true) (set cf true))))
ad "div rax" 48f7f0 0x0 (seq (set _src (cast 128 false (var rax))) (branch (is_zero (var _src)) nop (seq (set _rdxrax (| (<< (cast 128 false (var rdx)) (bv 8 0x40) false) (cast 128 false (var rax)))) (set _temp (cast 64 false (div (var _rdxrax) (var _src)))) (branch (! (ule (var _temp) (bv 64 0xffffffffffffffff))) nop (seq (set rax (| (& (var rax) (~ (bv 64 0xffff))) (cast 64 false (var _temp)))) (set rdx (| (& (var rdx) (~ (bv 64 0xffff))) (cast 64 false (mod (var _rdxrax) (var _src))))))))))
ad "idiv rax" 48f7f8 0x0 (seq (set _src (cast 128 false (var rax))) (branch (is_zero (var _src)) nop (seq (set _rdxrax (| (<< (cast 128 false (cast 32 false (var rdx))) (bv 8 0x40) false) (cast 128 false (cast 32 false (var rax))))) (set _temp (cast 64 false (sdiv (var _rdxrax) (var _src)))) (branch (|| (! (sle (var _temp) (bv 64 0x7fffffffffffffff))) (&& (sle (var _temp) (bv 64 0x8000000000000000)) (! (== (var _temp) (bv 64 0x8000000000000000))))) nop (seq (set rax (| (& (var rax) (~ (bv 64 0xffff))) (cast 64 false (var _temp)))) (set rdx (| (& (var rdx) (~ (bv 64 0xffff))) (cast 64 false (smod (var _rdxrax) (var _src))))))))))
ad "imul rax" 48f7e8 0x0 (seq (set _tmp_xp (* (cast 128 (msb (var rax)) (var rax)) (cast 128 (msb (var rax)) (var rax)))) (set rax (cast 64 false (var _tmp_xp))) (set rdx (cast 64 false (>> (var _tmp_xp) (bv 8 0x40) false))) (branch (== (cast 128 (msb (cast 64 false (var _tmp_xp))) (cast 64 false (var _tmp_xp))) (var _tmp_xp)) (seq (set cf false) (set of false)) (seq (set cf true) (set of true))))
a "inc rdx" 48ffc2 0x0 (seq (set _op (var rdx)) (set _result (+ (var _op) (bv 64 0x1))) (set rdx (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
d "jrcxz 0x39" e303 0x34 (branch (is_zero (var rcx)) (jmp (+ (bv 64 0x34) (bv 64 0x39))) nop)
d "jecxz 0x4a" 67e303 0x44 (branch (is_zero (cast 32 false (var rcx))) (jmp (+ (bv 64 0x44) (bv 64 0x4a))) nop)
a "jmp rbx" ffe3 0x0 (jmp (cast 64 false (var rbx)))
a "lea rax, [rax+0]" 488d00 0x0 (set rax (+ (var rax) (bv 64 0x0)))
a "lea rax, [rax+1]" 488d4001 0x0 (set rax (+ (var rax) (bv 64 0x1)))
a "lea rax, [rax-0]" 488d00 0x0 (set rax (+ (var rax) (bv 64 0x0)))
a "lea rax, [rax-1]" 488d40ff 0x0 (set rax (+ (var rax) (bv 64 0xffffffffffffffff)))
a "lea rax, [rax]" 488d00 0x0 (set rax (+ (var rax) (bv 64 0x0)))
d "lea eax, [rax]" 8d00 0x0 (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (+ (var rax) (bv 64 0x0)))))
d "lea rax, [eax]" 67488d00 0x0 (set rax (+ (cast 64 false (cast 32 false (var rax))) (bv 64 0x0)))
aB "lea rax,[rel -10]" 488d06f6ffffff
aB "lea rax,[rel 0]" 488d0500000000
aB "lea rax,[rel 10]" 488d050a000000
a "lea rax,[rip+0]" 488d0500000000 0x0 (set rax (+ (bv 64 0x0) (bv 64 0x0)))
a "lea rax,[rip+10]" 488d050a000000 0x0 (set rax (+ (bv 64 0x0) (bv 64 0xa)))
a "lea rax,[rip-0]" 488d0500000000 0x0 (set rax (+ (bv 64 0x0) (bv 64 0x0)))
a "lea rax,[rip-10]" 488d05f6ffffff 0x0 (set rax (+ (bv 64 0x0) (bv 64 0xfffffffffffffff6)))
a "lea rax,[rip]" 488d0500000000 0x0 (set rax (+ (bv 64 0x0) (bv 64 0x0)))
a "lea rdi,[rip+0x1011]" 488d3d11100000 0x0 (set rdi (+ (bv 64 0x0) (bv 64 0x1011)))
aB "lea rax, [0x803]" 488d042503080000
aB "lea rax, 0x803" 488d042503080000
a "mov [rsi], rbx" 48891e 0x0 (storew 0 (+ (var rsi) (bv 64 0x0)) (var rbx))
ad "mov eax, 0" b800000000 0x0 (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (bv 32 0x0))))
ad "mov ecx, 0x7fffffff" b9ffffff7f 0x0 (set rcx (| (& (var rcx) (~ (bv 64 0xffffffff))) (cast 64 false (bv 32 0x7fffffff))))
a "mov esi, -0x80000000" be00000080 0x0 (set rsi (| (& (var rsi) (~ (bv 64 0xffffffff))) (cast 64 false (bv 32 0x80000000))))
ad "mov esi, 0x80000000" be00000080 0x0 (set rsi (| (& (var rsi) (~ (bv 64 0xffffffff))) (cast 64 false (bv 32 0x80000000))))
a "mov edi, -1" bfffffffff 0x0 (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (bv 32 0xffffffff))))
ad "mov edi, 0xffffffff" bfffffffff 0x0 (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (bv 32 0xffffffff))))
a "mov rax, 0x1122334455667788" 48b88877665544332211 0x0 empty
a "mov rax, 3" 48c7c003000000 0x0 (set rax (bv 64 0x3))
a "mov rax, 33" 48c7c021000000 0x0 (set rax (bv 64 0x21))
ad "mov rax, 0x7fffffff" 48c7c0ffffff7f 0x0 (set rax (bv 64 0x7fffffff))
a "mov rax, 0x80000000" 48b80000008000000000 0x0 empty
ad "movabs rax, 0x80000000" 48b80000008000000000 0x0 empty
a "mov rax, 0xdeadbeef" 48b8efbeadde00000000 0x0 empty
ad "movabs rax, 0xdeadbeef" 48b8efbeadde00000000 0x0 empty
a "mov rax, 0xffffffff" 48b8ffffffff00000000 0x0 empty
ad "movabs rax, 0xffffffff" 48b8ffffffff00000000 0x0 empty
a "mov rax, 0x100000000" 48b80000000001000000 0x0 empty
ad "movabs rax, 0x100000000" 48b80000000001000000 0x0 empty
ad "mov rax, 0" 48c7c000000000 0x0 (set rax (bv 64 0x0))
a "mov rax, -1" 48c7c0ffffffff 0x0 (set rax (bv 64 0xffffffffffffffff))
a "mov rax, -0x1" 48c7c0ffffffff 0x0 (set rax (bv 64 0xffffffffffffffff))
ad "mov rax, 0xffffffffffffffff" 48c7c0ffffffff 0x0 (set rax (bv 64 0xffffffffffffffff))
a "mov rax, 0xFfFFffFFFFffffff" 48c7c0ffffffff 0x0 (set rax (bv 64 0xffffffffffffffff))
a "mov rax, -1U" 48c7c0ffffffff 0x0 (set rax (bv 64 0xffffffffffffffff))
a "mov rax, 0xffffffffffffffffU" 48c7c0ffffffff 0x0 (set rax (bv 64 0xffffffffffffffff))
a "mov rax, -2" 48c7c0feffffff 0x0 (set rax (bv 64 0xfffffffffffffffe))
ad "mov rax, 0xfffffffffffffffe" 48c7c0feffffff 0x0 (set rax (bv 64 0xfffffffffffffffe))
a "mov rax, -0x80000000" 48c7c000000080 0x0 (set rax (bv 64 0xffffffff80000000))
ad "mov rax, 0xffffffff80000000" 48c7c000000080 0x0 (set rax (bv 64 0xffffffff80000000))
a "mov rax, -0x80000001" 48b8ffffff7fffffffff 0x0 empty
ad "movabs rax, 0xffffffff7fffffff" 48b8ffffff7fffffffff 0x0 empty
ad "mov r9, 0x7fffffff" 49c7c1ffffff7f 0x0 (set r9 (bv 64 0x7fffffff))
a "mov r10, 0x80000000" 49ba0000008000000000 0x0 empty
ad "movabs r10, 0x80000000" 49ba0000008000000000 0x0 empty
a "mov r11, 0x100000000" 49bb0000000001000000 0x0 empty
ad "movabs r11, 0x100000000" 49bb0000000001000000 0x0 empty
a "mov r14, -0x80000000" 49c7c600000080 0x0 (set r14 (bv 64 0xffffffff80000000))
ad "mov r14, 0xffffffff80000000" 49c7c600000080 0x0 (set r14 (bv 64 0xffffffff80000000))
a "mov r15, -0x80000001" 49bfffffff7fffffffff 0x0 empty
ad "movabs r15, 0xffffffff7fffffff" 49bfffffff7fffffffff 0x0 empty
a "mov rax, [rax+0]" 488b00 0x0 (set rax (loadw 0 64 (+ (var rax) (bv 64 0x0))))
a "mov rax, [rax+1]" 488b4001 0x0 (set rax (loadw 0 64 (+ (var rax) (bv 64 0x1))))
a "mov rax, [rax-0]" 488b00 0x0 (set rax (loadw 0 64 (+ (var rax) (bv 64 0x0))))
a "mov rax, [rax-1]" 488b40ff 0x0 (set rax (loadw 0 64 (+ (var rax) (bv 64 0xffffffffffffffff))))
a "mov rax, [rax]" 488b00 0x0 (set rax (loadw 0 64 (+ (var rax) (bv 64 0x0))))
aB "mov rax,[rel -10]" 488b05f6ffffff
aB "mov rax,[rel 0]" 488b0500000000
aB "mov rax,[rel 10]" 488b050a000000
a "mov rax,[rip+0]" 488b0500000000 0x0 (set rax (loadw 0 64 (+ (bv 64 0x0) (bv 64 0x0))))
a "mov rax,[rip+10]" 488b050a000000 0x0 (set rax (loadw 0 64 (+ (bv 64 0x0) (bv 64 0xa))))
a "mov rax,[rip-0]" 488b0500000000 0x0 (set rax (loadw 0 64 (+ (bv 64 0x0) (bv 64 0x0))))
a "mov rax,[rip-10]" 488b05f6ffffff 0x0 (set rax (loadw 0 64 (+ (bv 64 0x0) (bv 64 0xfffffffffffffff6))))
a "mov rax,[rip]" 488b0500000000 0x0 (set rax (loadw 0 64 (+ (bv 64 0x0) (bv 64 0x0))))
a "mov rbx, 3" 48c7c303000000 0x0 (set rbx (bv 64 0x3))
a "mov edx, [rbp-4]" 8b55fc 0x0 (set rdx (| (& (var rdx) (~ (bv 64 0xffffffff))) (cast 64 false (loadw 0 32 (+ (var rbp) (bv 64 0xfffffffffffffffc))))))
a "mov rbx, rax" 4889c3 0x0 (set rbx (var rax))
a "mov rcx, -0x1122334455667788" 48b9788899aabbccddee 0x0 empty
aB "mov rcx, -0x112233445566778899" 00
a "mov rsi, rbx" 4889de 0x0 (set rsi (var rbx))
a "mov rcx, r9" 4c89c9 0x0 (set rcx (var r9))
a "mov r10, rax" 4989c2 0x0 (set r10 (var rax))
a "mov r12, r9" 4d89cc 0x0 (set r12 (var r9))
a "mov rcx, rbp" 4889e9 0x0 (set rcx (var rbp))
a "mov al, [0xbeef]" a0efbe000000000000 0x0 empty
a "mov ax, [0xbeef]" 66a1efbe000000000000 0x0 empty
a "mov eax, [0xbeef]" a1efbe000000000000 0x0 empty
a "mov rax, [0xbeef]" 48a1efbe000000000000 0x0 empty
a "mov rax, [0x1122334455667788]" 48a18877665544332211 0x0 empty
a "mov rax, [rax + 0xbeef]" 488b80efbe0000 0x0 (set rax (loadw 0 64 (+ (var rax) (bv 64 0xbeef))))
a "mov rax, [rbx + 0xbeef]" 488b83efbe0000 0x0 (set rax (loadw 0 64 (+ (var rbx) (bv 64 0xbeef))))
a "mov rcx, [rbx + 0xbeef]" 488b8befbe0000 0x0 (set rcx (loadw 0 64 (+ (var rbx) (bv 64 0xbeef))))
a "mov rbx, [rbp + 0xbeef]" 488b9defbe0000 0x0 (set rbx (loadw 0 64 (+ (var rbp) (bv 64 0xbeef))))
a "mov rax, [rip + 0xbeef]" 488b05efbe0000 0x0 (set rax (loadw 0 64 (+ (bv 64 0x0) (bv 64 0xbeef))))
a "mov qword [rax], 0x0" 48c70000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 64 0x0))
aB "mov sil, 0" 40b600
aB "mov dil, -5" 40b7fb
aB "mov spl, bpl" 4088ec
a "pop rax" 58 0x0 (seq (set rax (loadw 0 64 (+ (var rsp) (bv 64 0x0)))) (set rsp (+ (var rsp) (bv 64 0x8))))
ad "pop r8" 4158 0x0 (seq (set r8 (loadw 0 64 (+ (var rsp) (bv 64 0x0)))) (set rsp (+ (var rsp) (bv 64 0x8))))
ad "pop r15" 415f 0x0 (seq (set r15 (loadw 0 64 (+ (var rsp) (bv 64 0x0)))) (set rsp (+ (var rsp) (bv 64 0x8))))
d "popfq" 9d 0x0 (seq (set _flags (loadw 0 64 (+ (var rsp) (bv 64 0x0)))) (set cf (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x2) false)) (set pf (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x2) false)) (set af (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x2) false)) (set zf (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x1) false)) (set sf (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x1) false)) (set tf (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x1) false)) (set if (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x1) false)) (set df (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x1) false)) (set of (lsb (var _flags))) (set _flags (>> (var _flags) (bv 8 0x3) false)) (set nt (lsb (var _flags))) (set rsp (+ (var rsp) (bv 64 0x8))))
d "pushfq" 9c 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (| (<< (| (<< (| (<< (| (<< (| (<< (| (<< (| (<< (| (<< (| (<< (| (<< (| (<< (| (<< (ite false (bv 64 0x1) (bv 64 0x0)) (bv 64 0x1) false) (ite (var nt) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x2) false) (bv 64 0x3)) (bv 64 0x1) false) (ite (var of) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x1) false) (ite (var df) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x1) false) (ite (var if) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x1) false) (ite (var tf) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x1) false) (ite (var zf) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x1) false) (ite (var zf) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x2) false) (ite (var af) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x2) false) (ite (var pf) (bv 64 0x1) (bv 64 0x0))) (bv 64 0x1) false) (bv 64 0x1)) (bv 64 0x1) false) (ite (var cf) (bv 64 0x1) (bv 64 0x0))))))
aB "prefetcht1 [eax]" 670f1810
aB "prefetcht1 [rax]" 0f1810
aB "prefetcht1 byte [eax]" 670f1810
aB "prefetcht1 byte [rax]" 0f1810
a "shl rdx, 5" 48c1e205 0x0 (seq (set _cnt (bv 8 0x5)) (set _cnt_mask (bv 8 0x3f)) (set _masked (& (var _cnt) (var _cnt_mask))) (set _tmp_cnt (var _masked)) (set _dest (var rdx)) (set _tmp_dest (var _dest)) (repeat (! (is_zero (var _tmp_cnt))) (seq (set cf (msb (var _dest))) (set _dest (<< (var _dest) (bv 8 0x1) false)) (set _tmp_cnt (- (var _tmp_cnt) (bv 8 0x1))))) (branch (== (var _masked) (bv 8 0x1)) (set of (^^ (msb (var _dest)) (var cf))) nop))
a "sub rax, 44" 4883e82c 0x0 (seq (set op1 (var rax)) (set op2 (bv 64 0x2c)) (set sub (- (var op1) (var op2))) (set rax (var sub)) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "sub rax, rbx" 4829d8 0x0 (seq (set op1 (var rax)) (set op2 (var rbx)) (set sub (- (var op1) (var op2))) (set rax (var sub)) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "sub r9, rbx" 4929d9 0x0 (seq (set op1 (var r9)) (set op2 (var rbx)) (set sub (- (var op1) (var op2))) (set r9 (var sub)) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "sub rcx, r10" 4c29d1 0x0 (seq (set op1 (var rcx)) (set op2 (var r10)) (set sub (- (var op1) (var op2))) (set rcx (var sub)) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "sub r12, r11" 4d29dc 0x0 (seq (set op1 (var r12)) (set op2 (var r11)) (set sub (- (var op1) (var op2))) (set r12 (var sub)) (set _result (var sub)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var sub)) (set _x (var op1)) (set _y (var op2)) (set cf (|| (|| (&& (! (msb (var _x))) (msb (var _y))) (&& (msb (var _y)) (msb (var _result)))) (&& (msb (var _result)) (! (msb (var _x)))))) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "test ebx, 0x12345678" f7c378563412 0x0 (seq (set _res (& (cast 32 false (var rbx)) (bv 32 0x12345678))) (set rbx (| (& (var rbx) (~ (bv 64 0xffffffff))) (cast 64 false (var _res)))) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "test rbx, 0x12345678" 48f7c378563412 0x0 (seq (set _res (& (var rbx) (bv 64 0x12345678))) (set rbx (var _res)) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "test dword [eax], 0x12345678" 67f70078563412 0x0 (seq (set _res (& (loadw 0 32 (+ (cast 64 false (cast 32 false (var rax))) (bv 64 0x0))) (bv 32 0x12345678))) (storew 0 (+ (cast 64 false (cast 32 false (var rax))) (bv 64 0x0)) (var _res)) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "test dword [rax], 0x12345678" f70078563412 0x0 (seq (set _res (& (loadw 0 32 (+ (var rax) (bv 64 0x0))) (bv 32 0x12345678))) (storew 0 (+ (var rax) (bv 64 0x0)) (var _res)) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "test qword [rcx], 0x12345678" 48f70178563412 0x0 (seq (set _res (& (loadw 0 64 (+ (var rcx) (bv 64 0x0))) (bv 64 0x12345678))) (storew 0 (+ (var rcx) (bv 64 0x0)) (var _res)) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "test rax, rbx" 4885d8 0x0 (seq (set _res (& (var rax) (var rbx))) (set rax (var _res)) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "test rcx, rcx" 4885c9 0x0 (seq (set _res (& (var rcx) (var rcx))) (set rcx (var _res)) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "test rdx, rsi" 4885f2 0x0 (seq (set _res (& (var rdx) (var rsi))) (set rdx (var _res)) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "test r8, r8" 4d85c0 0x0 (seq (set _res (& (var r8) (var r8))) (set r8 (var _res)) (set _result (var _res)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set cf false) (set of false))
a "xor [rax], rax" 483100 0x0 (seq (set _xor (^ (loadw 0 64 (+ (var rax) (bv 64 0x0))) (var rax))) (storew 0 (+ (var rax) (bv 64 0x0)) (var _xor)) (set of false) (set cf false) (set _result (var _xor)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "xor [rsi], rbx" 48311e 0x0 (seq (set _xor (^ (loadw 0 64 (+ (var rsi) (bv 64 0x0))) (var rbx))) (storew 0 (+ (var rsi) (bv 64 0x0)) (var _xor)) (set of false) (set cf false) (set _result (var _xor)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "xor rax, rax" 4831c0 0x0 (seq (set _xor (^ (var rax) (var rax))) (set rax (var _xor)) (set of false) (set cf false) (set _result (var _xor)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "xor rdx, rdx" 4831d2 0x0 (seq (set _xor (^ (var rdx) (var rdx))) (set rdx (var _xor)) (set of false) (set cf false) (set _result (var _xor)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "xlatb" d7 0x0 (set rax (| (& (var rax) (~ (bv 64 0xff))) (cast 64 false (loadw 0 8 (+ (+ (var rbx) (bv 64 0x0)) (cast 64 false (cast 8 false (var rax))))))))
a "rep movsd" f3a5
a "repnz stosd" f2ab
a "repz monitor" f30f01c8
a "repe vmcall" f30f01c1
a "repne sfence" f20faef8
a "rep rdpmc" f30f33
a "mov eax, 33" b821000000 0x0 (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (bv 32 0x21))))
a "mov rax, 33" 48c7c021000000 0x0 (set rax (bv 64 0x21))
a "mov dword ptr [rbp+4],0" c7450400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0x4)) (bv 32 0x0))
a "mov qword ptr [rbp+4],0" 48c7450400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0x4)) (bv 64 0x0))
a "mov [rbp+4],0" 48c7450400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0x4)) (bv 64 0x0))
a "mov [ebp+4],0" 67c7450400000000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rbp))) (bv 64 0x4)) (bv 32 0x0))
ad "push r8" 4150 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var r8))))
ad "push r9" 4151 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var r9))))
ad "push r10" 4152 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var r10))))
ad "push r11" 4153 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var r11))))
ad "push r12" 4154 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var r12))))
ad "push r13" 4155 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var r13))))
ad "push r14" 4156 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var r14))))
ad "push r15" 4157 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var r15))))

ad "call r8" 41ffd0 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
ad "call r9" 41ffd1 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
ad "call r10" 41ffd2 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
ad "call r11" 41ffd3 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
ad "call r12" 41ffd4 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
ad "call r13" 41ffd5 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
ad "call r14" 41ffd6 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
ad "call r15" 41ffd7 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
a "mov dword ptr [rax],0x1" c70001000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0x1))
a "mov qword [rax], 0x1" 48c70001000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 64 0x1))
a "mov [rax], 0x1" 48c70001000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 64 0x1))
a "mov byte ptr [rip+0x203cb8],0x1" c605b83c200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x203cb8)) (bv 8 0x1))
a "mov dword ptr [rip+0x203817],0x42" c7051738200042000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x203817)) (bv 32 0x42))
a "mov dword ptr [rip+0x20380b],0x54" c7050b38200054000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20380b)) (bv 32 0x54))
a "mov dword ptr [rip+0x2037ff],0x4f" c705ff3720004f000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2037ff)) (bv 32 0x4f))
a "mov dword ptr [rip+0x2037f3],0x49" c705f337200049000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2037f3)) (bv 32 0x49))
a "mov dword ptr [rip+0x2037e7],0x30" c705e737200030000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2037e7)) (bv 32 0x30))
a "mov byte ptr [rbp-0x110a],0x49" c685f6eeffff49 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x49))
a "mov dword ptr [rbp-0x1100],0x0" c78500efffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffef00)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10fc],0x0" c78504efffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffef04)) (bv 32 0x0))
a "mov byte ptr [rbp-0x110a],0x49" c685f6eeffff49 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x49))
a "mov byte ptr [rbp-0x110a],0x66" c685f6eeffff66 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x66))
a "mov qword ptr [rbp-0x10b0],0x0" 48c78550efffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffef50)) (bv 64 0x0))
a "mov dword ptr [rbp-0x10f8],0x0" c78508efffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffef08)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10f8],0x0" c78508efffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffef08)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10d4],0xc" c7852cefffff0c000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffef2c)) (bv 32 0xc))
a "mov dword ptr [rbp-0x1100],0x0" c78500efffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffef00)) (bv 32 0x0))
a "mov byte ptr [rbp-0x110a],0x42" c685f6eeffff42 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x42))
a "mov byte ptr [rbp-0x110a],0x54" c685f6eeffff54 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x54))
a "mov byte ptr [rbp-0x110a],0x46" c685f6eeffff46 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x46))
a "mov byte ptr [rax],0x30" c60030 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x30))
a "mov byte ptr [rbp-0x110a],0x42" c685f6eeffff42 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x42))
a "mov byte ptr [rax],0x30" c60030 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x30))
a "mov byte ptr [rbp-0x110a],0x54" c685f6eeffff54 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x54))
a "mov byte ptr [rax],0x30" c60030 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x30))
a "mov byte ptr [rbp-0x110a],0x4f" c685f6eeffff4f 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x4f))
a "mov byte ptr [rax],0x30" c60030 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x30))
a "mov byte ptr [rbp-0x110a],0x49" c685f6eeffff49 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x49))
a "mov byte ptr [rax],0x62" c60062 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x62))
a "mov byte ptr [rbp-0x110a],0x49" c685f6eeffff49 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffeef6)) (bv 8 0x49))
a "mov byte ptr [rax],0x74" c60074 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x74))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x10],0x0" c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x10],0xffffffff" c745f0ffffffff 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0xffffffff))
a "mov dword ptr [rbp-0x10],0x1" c745f001000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x1))
a "mov dword ptr [rbp-0x4],0x1" c745fc01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x1))
a "mov byte ptr [rip+0x207200],0x1" c6050072200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x207200)) (bv 8 0x1))
a "mov dword ptr [rbp-0xc],0x0" c745f400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff4)) (bv 32 0x0))
a "mov qword ptr [rip+0x2687bd],0x0" 48c705bd87260000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2687bd)) (bv 64 0x0))
a "mov dword ptr [rbp-0x18c],0x0" c78574feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe74)) (bv 32 0x0))
a "mov dword ptr [rbp-0x18c],0x1" c78574feffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe74)) (bv 32 0x1))
a "mov dword ptr [rbp-0x114],0x0" c785ecfeffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffeec)) (bv 32 0x0))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x18],0x0" 48c745e800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe8)) (bv 64 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rip+0x2068f4],0x0" 48c705f468200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2068f4)) (bv 64 0x0))
a "mov byte ptr [rbp-0x31],0x0" c645cf00 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffcf)) (bv 8 0x0))
a "mov byte ptr [rbp-0x31],0x1" c645cf01 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffcf)) (bv 8 0x1))
a "mov qword ptr [rbp-0x28],0x0" 48c745d800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x288],0x0" 48c78578fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd78)) (bv 64 0x0))
a "mov qword ptr [rbp-0x280],0x0" 48c78580fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd80)) (bv 64 0x0))
a "mov qword ptr [rbp-0x270],0x0" 48c78590fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd90)) (bv 64 0x0))
a "mov qword ptr [rbp-0x268],0x0" 48c78598fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd98)) (bv 64 0x0))
a "mov qword ptr [rbp-0x260],0x0" 48c785a0fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffda0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x1d0],0x0" 48c78530feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe30)) (bv 64 0x0))
a "mov dword ptr [rbp-0x2c4],0x0" c7853cfdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd3c)) (bv 32 0x0))
a "mov dword ptr [rbp-0x2c0],0x0" c78540fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd40)) (bv 32 0x0))
a "mov dword ptr [rbp-0x2bc],0x0" c78544fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd44)) (bv 32 0x0))
a "mov byte ptr [rbp-0x2d4],0x0" c6852cfdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd2c)) (bv 8 0x0))
a "mov dword ptr [rbp-0x2b8],0x0" c78548fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd48)) (bv 32 0x0))
a "mov byte ptr [rbp-0x2d3],0x0" c6852dfdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd2d)) (bv 8 0x0))
a "mov dword ptr [rbp-0x2b4],0x0" c7854cfdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd4c)) (bv 32 0x0))
a "mov dword ptr [rbp-0x2b0],0x1" c78550fdffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd50)) (bv 32 0x1))
a "mov dword ptr [rbp-0x2ac],0x1" c78554fdffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd54)) (bv 32 0x1))
a "mov dword ptr [rbp-0x2a4],0x5" c7855cfdffff05000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd5c)) (bv 32 0x5))
a "mov byte ptr [rbp-0x2d2],0x0" c6852efdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd2e)) (bv 8 0x0))
a "mov byte ptr [rbp-0x2d1],0x0" c6852ffdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd2f)) (bv 8 0x0))
a "mov qword ptr [rbp-0x248],0x0" 48c785b8fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdb8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x240],0x0" 48c785c0fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdc0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x230],0x0" 48c785d0fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdd0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x228],0x0" 48c785d8fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdd8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x220],0x0" 48c785e0fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffde0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x218],0x0" 48c785e8fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffde8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x210],0x0" 48c785f0fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x208],0x0" 48c785f8fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf8)) (bv 64 0x0))
a "mov byte ptr [rbp-0x2d0],0x0" c68530fdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd30)) (bv 8 0x0))
a "mov byte ptr [rbp-0x2cf],0x0" c68531fdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd31)) (bv 8 0x0))
a "mov dword ptr [rbp-0x2a0],0x0" c78560fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd60)) (bv 32 0x0))
a "mov qword ptr [rbp-0x200],0x0" 48c78500feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe00)) (bv 64 0x0))
a "mov byte ptr [rbp-0x2ce],0x0" c68532fdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd32)) (bv 8 0x0))
a "mov dword ptr [rbp-0x2b8],0x1" c78548fdffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd48)) (bv 32 0x1))
a "mov dword ptr [rbp-0x2b8],0x0" c78548fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd48)) (bv 32 0x0))
a "mov dword ptr [rip+0x267855],0x1" c7055578260001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x267855)) (bv 32 0x1))
a "mov byte ptr [rbp-0x2ce],0x1" c68532fdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd32)) (bv 8 0x1))
a "mov byte ptr [rbp-0x2d3],0x1" c6852dfdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd2d)) (bv 8 0x1))
a "mov byte ptr [rbp-0x2d0],0x1" c68530fdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd30)) (bv 8 0x1))
a "mov dword ptr [rbp-0x2bc],0x1" c78544fdffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd44)) (bv 32 0x1))
a "mov dword ptr [rbp-0x2c4],0x1" c7853cfdffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd3c)) (bv 32 0x1))
a "mov dword ptr [rbp-0x2c4],0x2" c7853cfdffff02000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd3c)) (bv 32 0x2))
a "mov byte ptr [rbp-0x2d4],0x1" c6852cfdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd2c)) (bv 8 0x1))
a "mov byte ptr [rbp-0x2d1],0x1" c6852ffdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd2f)) (bv 8 0x1))
a "mov dword ptr [rbp-0x2ac],0x0" c78554fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd54)) (bv 32 0x0))
a "mov byte ptr [rbp-0x2d0],0x1" c68530fdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd30)) (bv 8 0x1))
a "mov byte ptr [rbp-0x2cf],0x1" c68531fdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd31)) (bv 8 0x1))
a "mov byte ptr [rbp-0x2d0],0x1" c68530fdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd30)) (bv 8 0x1))
a "mov byte ptr [rip+0x205ab2],0x1" c605b25a200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x205ab2)) (bv 8 0x1))
a "mov byte ptr [rbp-0x2d2],0x1" c6852efdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd2e)) (bv 8 0x1))
a "mov byte ptr [rip+0x205a32],0x1" c605325a200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x205a32)) (bv 8 0x1))
a "mov word ptr [rbp-0x98],0x6c" 66c78568ffffff6c00 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff68)) (bv 16 0x6c))
a "mov qword ptr [rbp-0x1f8],0x0" 48c78508feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe08)) (bv 64 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rbp-0x248],0x0" 48c785b8fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdb8)) (bv 64 0x0))
a "mov byte ptr [rip+0x205443],0x1" c6054354200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x205443)) (bv 8 0x1))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x2c4],0x2" c7853cfdffff02000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd3c)) (bv 32 0x2))
a "mov dword ptr [rbp-0x2e4],0x2" c7851cfdffff02000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd1c)) (bv 32 0x2))
a "mov qword ptr [rbp-0x158],0x0" 48c785a8feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffea8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x148],0x0" 48c785b8feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffeb8)) (bv 64 0x0))
a "mov dword ptr [rbp-0x2a4],0x7" c7855cfdffff07000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd5c)) (bv 32 0x7))
a "mov dword ptr [rbp-0x2a4],0x5" c7855cfdffff05000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd5c)) (bv 32 0x5))
a "mov dword ptr [rbp-0x2c4],0x2" c7853cfdffff02000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd3c)) (bv 32 0x2))
a "mov qword ptr [rbp-0x120],0x0" 48c785e0feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffee0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x1e0],0x0" 48c78520feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe20)) (bv 64 0x0))
a "mov qword ptr [rbp-0x248],0x0" 48c785b8fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdb8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x1d8],0x0" 48c78528feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe28)) (bv 64 0x0))
a "mov dword ptr [rbp-0x2b0],0xffffffff" c78550fdffffffffffff 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd50)) (bv 32 0xffffffff))
a "mov dword ptr [rax+0x8],0xffffffff" c74008ffffffff 0x0 (storew 0 (+ (var rax) (bv 64 0x8)) (bv 32 0xffffffff))
a "mov dword ptr [rbp-0x2a8],0x0" c78558fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd58)) (bv 32 0x0))
a "mov qword ptr [rax+0x10],0x0" 48c7401000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x10)) (bv 64 0x0))
a "mov dword ptr [rax+0x8],0xffffffff" c74008ffffffff 0x0 (storew 0 (+ (var rax) (bv 64 0x8)) (bv 32 0xffffffff))
a "mov qword ptr [rax+0x10],0x0" 48c7401000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x10)) (bv 64 0x0))
a "mov qword ptr [rbp-0x288],0x0" 48c78578fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd78)) (bv 64 0x0))
a "mov qword ptr [rbp-0x280],0x0" 48c78580fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd80)) (bv 64 0x0))
a "mov byte ptr [rip+0x2049a0],0x1" c605a049200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2049a0)) (bv 8 0x1))
a "mov qword ptr [rip+0x20489f],0x0" 48c7059f48200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20489f)) (bv 64 0x0))
a "mov qword ptr [rip+0x2047f9],0x0" 48c705f947200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2047f9)) (bv 64 0x0))
a "mov dword ptr [rip+0x2047c7],0x1" c705c747200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2047c7)) (bv 32 0x1))
a "mov dword ptr [rip+0x2047b6],0x0" c705b647200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2047b6)) (bv 32 0x0))
a "mov dword ptr [rbp-0x4],0x0" c745fc00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x0))
a "mov dword ptr [rbp-0x78],0x0" c7458800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff88)) (bv 32 0x0))
a "mov byte ptr [rbp-0x79],0x1" c6458701 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff87)) (bv 8 0x1))
a "mov qword ptr [rbp-0x60],0x1" 48c745a001000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa0)) (bv 64 0x1))
a "mov byte ptr [rbp-0x79],0x0" c6458700 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff87)) (bv 8 0x0))
a "mov qword ptr [rbp-0x60],0x1" 48c745a001000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa0)) (bv 64 0x1))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov dword ptr [rbp-0x28],0x0" c745d800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x24],0x0" c745dc00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffdc)) (bv 32 0x0))
a "mov dword ptr [rbp-0xd8],0x0" c78528ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff28)) (bv 32 0x0))
a "mov dword ptr [rbp-0xd4],0x0" c7852cffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff2c)) (bv 32 0x0))
a "mov dword ptr [rbp-0xd0],0x0" c78530ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff30)) (bv 32 0x0))
a "mov dword ptr [rbp-0xcc],0x0" c78534ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff34)) (bv 32 0x0))
a "mov qword ptr [rbp-0x98],0x0" 48c78568ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff68)) (bv 64 0x0))
a "mov qword ptr [rbp-0x90],0x0" 48c78570ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff70)) (bv 64 0x0))
a "mov qword ptr [rbp-0x88],0x0" 48c78578ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff78)) (bv 64 0x0))
a "mov qword ptr [rbp-0x80],0x0" 48c7458000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff80)) (bv 64 0x0))
a "mov qword ptr [rbp-0x78],0x0" 48c7458800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff88)) (bv 64 0x0))
a "mov dword ptr [rbp-0xc8],0xffffffff" c78538ffffffffffffff 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff38)) (bv 32 0xffffffff))
a "mov qword ptr [rbp-0x70],0x0" 48c7459000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff90)) (bv 64 0x0))
a "mov qword ptr [rbp-0x68],0x0" 48c7459800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff98)) (bv 64 0x0))
a "mov qword ptr [rbp-0x60],0x0" 48c745a000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x58],0x0" 48c745a800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa8)) (bv 64 0x0))
a "mov dword ptr [rbp-0xc4],0xffffffff" c7853cffffffffffffff 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff3c)) (bv 32 0xffffffff))
a "mov dword ptr [rbp-0xc0],0x0" c78540ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff40)) (bv 32 0x0))
a "mov qword ptr [rbp-0x50],0x0" 48c745b000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffb0)) (bv 64 0x0))
a "mov dword ptr [rbp-0xd8],0x6a" c78528ffffff6a000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff28)) (bv 32 0x6a))
a "mov dword ptr [rbp-0xd0],0x1" c78530ffffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff30)) (bv 32 0x1))
a "mov dword ptr [rbp-0xcc],0x1" c78534ffffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff34)) (bv 32 0x1))
a "mov dword ptr [rbp-0xd8],0x1" c78528ffffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff28)) (bv 32 0x1))
a "mov dword ptr [rbp-0xd8],0x2" c78528ffffff02000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff28)) (bv 32 0x2))
a "mov dword ptr [rip+0x2032e9],0x0" c705e932200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2032e9)) (bv 32 0x0))
a "mov dword ptr [rbp-0xc0],0x0" c78540ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff40)) (bv 32 0x0))
a "mov dword ptr [rbp-0xc0],0x1" c78540ffffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff40)) (bv 32 0x1))
a "mov byte ptr [rbp-0xe1],0x0" c6851fffffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff1f)) (bv 8 0x0))
a "mov qword ptr [rip+0x202ebe],0x0" 48c705be2e200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202ebe)) (bv 64 0x0))
a "mov dword ptr [rbp-0xe0],0x0" c78520ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff20)) (bv 32 0x0))
a "mov qword ptr [rbp-0x50],0x0" 48c745b000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffb0)) (bv 64 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rbp-0xa8],0x1" 48c78558ffffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff58)) (bv 64 0x1))
a "mov qword ptr [rip+0x202865],0x0" 48c7056528200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202865)) (bv 64 0x0))
a "mov dword ptr [rbp-0xe0],0x0" c78520ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff20)) (bv 32 0x0))
a "mov dword ptr [rbp-0xdc],0x0" c78524ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff24)) (bv 32 0x0))
a "mov byte ptr [rip+0x2013e0],0x1" c605e013200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2013e0)) (bv 8 0x1))
a "mov byte ptr [rbp-0x2d],0x0" c645d300 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd3)) (bv 8 0x0))
a "mov dword ptr [rbp-0x28],0x0" c745d800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd8)) (bv 32 0x0))
a "mov byte ptr [rbp-0x2d],0x1" c645d301 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd3)) (bv 8 0x1))
a "mov byte ptr [rip+0x201f30],0x1" c605301f200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201f30)) (bv 8 0x1))
a "mov dword ptr [rbp-0xc],0x0" c745f400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff4)) (bv 32 0x0))
a "mov dword ptr [rax],0x2e2e2e" c7002e2e2e00 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0x2e2e2e))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rbp-0x2d],0x0" c645d300 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd3)) (bv 8 0x0))
a "mov byte ptr [rbp-0x2d],0x1" c645d301 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd3)) (bv 8 0x1))
a "mov dword ptr [rip+0x2015f2],0x1" c705f215200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2015f2)) (bv 32 0x1))
a "mov byte ptr [rip+0x201606],0x1" c6050616200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201606)) (bv 8 0x1))
a "mov dword ptr [rip+0x2015f3],0x1" c705f315200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2015f3)) (bv 32 0x1))
a "mov dword ptr [rip+0x20159c],0x7" c7059c15200007000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20159c)) (bv 32 0x7))
a "mov dword ptr [rip+0x20158d],0x1" c7058d15200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20158d)) (bv 32 0x1))
a "mov dword ptr [rip+0x2015eb],0x0" c705eb15200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2015eb)) (bv 32 0x0))
a "mov dword ptr [rip+0x201558],0x0" c7055815200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201558)) (bv 32 0x0))
a "mov dword ptr [rip+0x2015b6],0x0" c705b615200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2015b6)) (bv 32 0x0))
a "mov dword ptr [rip+0x2015b0],0x0" c705b015200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2015b0)) (bv 32 0x0))
a "mov dword ptr [rip+0x201519],0x0" c7051915200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201519)) (bv 32 0x0))
a "mov dword ptr [rip+0x201577],0x0" c7057715200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201577)) (bv 32 0x0))
a "mov dword ptr [rip+0x201571],0x1" c7057115200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201571)) (bv 32 0x1))
a "mov dword ptr [rip+0x2014b7],0x0" c705b714200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2014b7)) (bv 32 0x0))
a "mov dword ptr [rip+0x201515],0x1" c7051515200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201515)) (bv 32 0x1))
a "mov dword ptr [rip+0x20150f],0x0" c7050f15200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20150f)) (bv 32 0x0))
a "mov dword ptr [rip+0x2013e2],0x3" c705e213200003000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2013e2)) (bv 32 0x3))
a "mov dword ptr [rip+0x2013fe],0x1" c705fe13200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2013fe)) (bv 32 0x1))
a "mov byte ptr [rip+0x204578],0x1" c6057845200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x204578)) (bv 8 0x1))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x168],0x0" c78598feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe98)) (bv 32 0x0))
a "mov dword ptr [rbp-0x168],0x0" c78598feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe98)) (bv 32 0x0))
a "mov dword ptr [rbp-0x168],0x0" c78598feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe98)) (bv 32 0x0))
a "mov dword ptr [rbp-0x168],0x0" c78598feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe98)) (bv 32 0x0))
a "mov dword ptr [rip+0x203d10],0x1" c705103d200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x203d10)) (bv 32 0x1))
a "mov dword ptr [rbp-0x168],0x0" c78598feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe98)) (bv 32 0x0))
a "mov dword ptr [rbp-0x168],0x0" c78598feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe98)) (bv 32 0x0))
a "mov dword ptr [rbp-0x164],0x0" c7859cfeffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe9c)) (bv 32 0x0))
a "mov dword ptr [rbp-0x168],0x0" c78598feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe98)) (bv 32 0x0))
a "mov dword ptr [rbp-0x160],0x0" c785a0feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffea0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x168],0x0" c78598feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe98)) (bv 32 0x0))
a "mov qword ptr [rbp-0x10],0x0" 48c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 64 0x0))
a "mov word ptr [rbp-0x3c],0x0" 66c745c40000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc4)) (bv 16 0x0))
a "mov dword ptr [rbp-0x38],0x0" c745c800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc8)) (bv 32 0x0))
a "mov byte ptr [rbp-0x3d],0x0" c645c300 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc3)) (bv 8 0x0))
a "mov word ptr [rbp-0x3a],0x0" 66c745c60000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc6)) (bv 16 0x0))
a "mov dword ptr [rbp-0x34],0x0" c745cc00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffcc)) (bv 32 0x0))
a "mov byte ptr [rbp-0x3e],0xf9" c645c2f9 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc2)) (bv 8 0xf9))
a "mov byte ptr [rbp-0x3e],0xfc" c645c2fc 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc2)) (bv 8 0xfc))
a "mov byte ptr [rbp-0x3e],0xff" c645c2ff 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc2)) (bv 8 0xff))
a "mov dword ptr [rbp-0x2c],0x7fffffff" c745d4ffffff7f 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd4)) (bv 32 0x7fffffff))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov byte ptr [rbp-0x2c],0xf7" c645d4f7 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd4)) (bv 8 0xf7))
a "mov byte ptr [rbp-0x2c],0xf8" c645d4f8 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd4)) (bv 8 0xf8))
a "mov dword ptr [rbp-0x30],0x7fffffff" c745d0ffffff7f 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd0)) (bv 32 0x7fffffff))
a "mov qword ptr [rbp-0x18],0x0" 48c745e800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe8)) (bv 64 0x0))
a "mov byte ptr [rbp-0x2c],0xf8" c645d4f8 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd4)) (bv 8 0xf8))
a "mov dword ptr [rbp-0xc],0x2" c745f402000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff4)) (bv 32 0x2))
a "mov dword ptr [rbp-0x8],0x0" c745f800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x14],0x0" c745ec00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffec)) (bv 32 0x0))
a "mov dword ptr [rbp-0xc],0xffffffff" c745f4ffffffff 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff4)) (bv 32 0xffffffff))
a "mov dword ptr [rbp-0xc],0x2" c745f402000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff4)) (bv 32 0x2))
a "mov dword ptr [rbp-0x10],0x0" c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10],0x0" c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10],0x0" c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10],0x0" c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10],0x0" c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10],0x0" c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x10],0x0" c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x14],0x0" c745ec00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffec)) (bv 32 0x0))
a "mov dword ptr [rbp-0x14],0x0" c745ec00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffec)) (bv 32 0x0))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x38],0x0" 48c745c800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc8)) (bv 64 0x0))
a "mov dword ptr [rax],0x0" c70000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0x0))
a "mov qword ptr [rbp-0x38],0x0" 48c745c800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc8)) (bv 64 0x0))
a "mov byte ptr [rax],0xa" c6000a 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0xa))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rbp-0x28],0x0" 48c745d800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd8)) (bv 64 0x0))
a "mov dword ptr [rax],0x0" c70000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0x0))
a "mov qword ptr [rbp-0x28],0x0" 48c745d800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd8)) (bv 64 0x0))
a "mov byte ptr [rax],0xa" c6000a 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0xa))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rbp-0x70],0x0" 48c7459000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff90)) (bv 64 0x0))
a "mov qword ptr [rbp-0x68],0x0" 48c7459800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff98)) (bv 64 0x0))
a "mov qword ptr [rbp-0x80],0x0" 48c7458000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff80)) (bv 64 0x0))
a "mov qword ptr [rbp-0x50],0x0" 48c745b000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffb0)) (bv 64 0x0))
a "mov dword ptr [rbp-0x98],0x0" c78568ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff68)) (bv 32 0x0))
a "mov dword ptr [rbp-0x94],0x0" c7856cffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x0))
a "mov dword ptr [rbp-0x90],0x0" c78570ffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff70)) (bv 32 0x0))
a "mov dword ptr [rbp-0x8c],0xffffffff" c78574ffffffffffffff 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff74)) (bv 32 0xffffffff))
a "mov dword ptr [rip+0x202447],0x42" c7054724200042000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202447)) (bv 32 0x42))
a "mov dword ptr [rip+0x2023db],0x0" c705db23200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2023db)) (bv 32 0x0))
a "mov dword ptr [rip+0x202408],0x72" c7050824200072000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202408)) (bv 32 0x72))
a "mov dword ptr [rbp-0x94],0x7" c7856cffffff07000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x7))
a "mov dword ptr [rip+0x2023b3],0x1" c705b323200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2023b3)) (bv 32 0x1))
a "mov dword ptr [rbp-0x94],0x6" c7856cffffff06000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x6))
a "mov dword ptr [rbp-0x94],0x2" c7856cffffff02000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x2))
a "mov dword ptr [rip+0x20238e],0x1" c7058e23200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20238e)) (bv 32 0x1))
a "mov dword ptr [rbp-0x90],0x1" c78570ffffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff70)) (bv 32 0x1))
a "mov dword ptr [rbp-0x98],0x1" c78568ffffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff68)) (bv 32 0x1))
a "mov byte ptr [rip+0x202337],0x1" c6053723200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202337)) (bv 8 0x1))
a "mov byte ptr [rip+0x20232f],0x0" c6052f23200000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20232f)) (bv 8 0x0))
a "mov dword ptr [rbp-0x94],0x6" c7856cffffff06000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x6))
a "mov byte ptr [rip+0x202319],0x1" c6051923200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202319)) (bv 8 0x1))
a "mov dword ptr [rbp-0x94],0x5" c7856cffffff05000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x5))
a "mov dword ptr [rbp-0x94],0x4" c7856cffffff04000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x4))
a "mov dword ptr [rbp-0x94],0x3" c7856cffffff03000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x3))
a "mov dword ptr [rbp-0x94],0x8" c7856cffffff08000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x8))
a "mov dword ptr [rip+0x20229f],0x75" c7059f22200075000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20229f)) (bv 32 0x75))
a "mov dword ptr [rip+0x202293],0x55" c7059322200055000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202293)) (bv 32 0x55))
a "mov byte ptr [rip+0x20227f],0x1" c6057f22200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20227f)) (bv 8 0x1))
a "mov byte ptr [rip+0x202294],0x1" c6059422200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202294)) (bv 8 0x1))
a "mov dword ptr [rip+0x202264],0x6a" c705642220006a000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202264)) (bv 32 0x6a))
a "mov dword ptr [rbp-0x94],0x1" c7856cffffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x1))
a "mov dword ptr [rbp-0x94],0x0" c7856cffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff6c)) (bv 32 0x0))
a "mov dword ptr [rbp-0x88],0x40" c78578ffffff40000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff78)) (bv 32 0x40))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rax+0x24],0x6c" c740246c000000 0x0 (storew 0 (+ (var rax) (bv 64 0x24)) (bv 32 0x6c))
a "mov dword ptr [rax+0x24],0x6d" c740246d000000 0x0 (storew 0 (+ (var rax) (bv 64 0x24)) (bv 32 0x6d))
a "mov dword ptr [rax+0x24],0x0" c7402400000000 0x0 (storew 0 (+ (var rax) (bv 64 0x24)) (bv 32 0x0))
a "mov byte ptr [rip+0x206cd8],0x1" c605d86c200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x206cd8)) (bv 8 0x1))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x64],0x0" c7459c00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff9c)) (bv 32 0x0))
a "mov qword ptr [rbp-0x50],0x0" 48c745b000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffb0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x48],0x0" 48c745b800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffb8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x40],0x0" 48c745c000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x38],0x0" 48c745c800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc8)) (bv 64 0x0))
a "mov dword ptr [rbp-0x60],0x0" c745a000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x5c],0x0" c745a400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa4)) (bv 32 0x0))
a "mov byte ptr [rbp-0x65],0x0" c6459b00 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff9b)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rbp-0x65],0x0" c6459b00 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff9b)) (bv 8 0x0))
a "mov byte ptr [rbp-0x65],0x1" c6459b01 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff9b)) (bv 8 0x1))
a "mov qword ptr [rax+0x8],0x0" 48c7400800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x10],0x0" 48c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 64 0x0))
a "mov dword ptr [rbp-0x20],0x0" c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x1c],0x0" c745e400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe4)) (bv 32 0x0))
a "mov dword ptr [rbp-0x34],0x20" c745cc20000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffcc)) (bv 32 0x20))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x38],0x0" 48c745c800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x30],0x0" 48c745d000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd0)) (bv 64 0x0))
a "mov byte ptr [rbp-0x3d],0x1" c645c301 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc3)) (bv 8 0x1))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rbp-0x8],0x0" 48c745f800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff8)) (bv 64 0x0))
a "mov dword ptr [rbp-0x4],0x0" c745fc00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x0))
a "mov dword ptr [rbp-0x4],0x6a" c745fc6a000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x6a))
a "mov dword ptr [rbp-0x4],0x71" c745fc71000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x71))
a "mov qword ptr [rbp-0x61920],0x0" 48c785e0e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6e0)) (bv 64 0x0))
a "mov dword ptr [rbp-0x61954],0x0" c785ace6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6ac)) (bv 32 0x0))
a "mov dword ptr [rbp-0x61958],0x0" c785a8e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6a8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x61950],0x0" c785b0e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6b0)) (bv 32 0x0))
a "mov qword ptr [rbp-0x61918],0x0" 48c785e8e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6e8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x61910],0x0" 48c785f0e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6f0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x61908],0x0" 48c785f8e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6f8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x61900],0x0" 48c78500e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e700)) (bv 64 0x0))
a "mov qword ptr [rbp-0x618f8],0x0" 48c78508e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e708)) (bv 64 0x0))
a "mov qword ptr [rbp-0x618f0],0x0" 48c78510e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e710)) (bv 64 0x0))
a "mov qword ptr [rbp-0x618d0],0x0" 48c78530e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e730)) (bv 64 0x0))
a "mov dword ptr [rbp-0x61938],0x0" c785c8e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6c8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x6194c],0x0" c785b4e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6b4)) (bv 32 0x0))
a "mov dword ptr [rbp-0x61948],0xffffffff" c785b8e6f9ffffffffff 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6b8)) (bv 32 0xffffffff))
a "mov dword ptr [rip+0x20531b],0x8" c7051b53200008000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20531b)) (bv 32 0x8))
a "mov dword ptr [rax+0x190],0x0" c7809001000000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x190)) (bv 32 0x0))
a "mov dword ptr [rip+0x20525c],0x40" c7055c52200040000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x20525c)) (bv 32 0x40))
a "mov dword ptr [rbp-0x6194c],0x2" c785b4e6f9ff02000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6b4)) (bv 32 0x2))
a "mov dword ptr [rbp-0x6194c],0x1" c785b4e6f9ff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6b4)) (bv 32 0x1))
a "mov dword ptr [rip+0x204e5f],0x1" c7055f4e200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x204e5f)) (bv 32 0x1))
a "mov dword ptr [rip+0x204d51],0x0" c705514d200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x204d51)) (bv 32 0x0))
a "mov dword ptr [rip+0x204d6a],0x1" c7056a4d200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x204d6a)) (bv 32 0x1))
a "mov dword ptr [rip+0x204cdc],0x0" c705dc4c200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x204cdc)) (bv 32 0x0))
a "mov qword ptr [rbp-0x618e8],0x0" 48c78518e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e718)) (bv 64 0x0))
a "mov qword ptr [rbp-0x618e0],0x0" 48c78520e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e720)) (bv 64 0x0))
a "mov qword ptr [rbp-0x618e0],0x0" 48c78520e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e720)) (bv 64 0x0))
a "mov qword ptr [rip+0x2049d8],0x0" 48c705d849200000000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2049d8)) (bv 64 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rbp-0x618d8],0x0" 48c78528e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e728)) (bv 64 0x0))
a "mov qword ptr [rbp-0x61898],0x0" 48c78568e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e768)) (bv 64 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rbp-0x618d8],0x0" 48c78528e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e728)) (bv 64 0x0))
a "mov dword ptr [rbp-0x61944],0x0" c785bce6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6bc)) (bv 32 0x0))
a "mov dword ptr [rbp-0x61954],0x20" c785ace6f9ff20000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6ac)) (bv 32 0x20))
a "mov dword ptr [rbp-0x6193c],0x0" c785c4e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6c4)) (bv 32 0x0))
a "mov dword ptr [rbp-0x6193c],0x1" c785c4e6f9ff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6c4)) (bv 32 0x1))
a "mov dword ptr [rbp-0x6194c],0x0" c785b4e6f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e6b4)) (bv 32 0x0))
a "mov dword ptr [rax+0x40c],0x0" c7800c04000000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x40c)) (bv 32 0x0))
a "mov qword ptr [rbp-0x618c8],0x0" 48c78538e7f9ff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffff9e738)) (bv 64 0x0))
a "mov byte ptr [rip+0x2037e8],0x1" c605e837200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2037e8)) (bv 8 0x1))
a "mov qword ptr [rbp-0x4a0],0x0" 48c78560fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb60)) (bv 64 0x0))
a "mov qword ptr [rbp-0x508],0x0" 48c785f8faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffaf8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x500],0x0" 48c78500fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb00)) (bv 64 0x0))
a "mov qword ptr [rbp-0x4f8],0x0" 48c78508fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb08)) (bv 64 0x0))
a "mov qword ptr [rbp-0x4f0],0x0" 48c78510fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb10)) (bv 64 0x0))
a "mov dword ptr [rbp-0x550],0x0" c785b0faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x54c],0x1" c785b4faffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab4)) (bv 32 0x1))
a "mov dword ptr [rbp-0x548],0x0" c785b8faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x544],0x0" c785bcfaffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffabc)) (bv 32 0x0))
a "mov dword ptr [rbp-0x540],0x0" c785c0faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffac0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x53c],0x0" c785c4faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffac4)) (bv 32 0x0))
a "mov qword ptr [rbp-0x4d0],0x0" 48c78530fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb30)) (bv 64 0x0))
a "mov qword ptr [rbp-0x4c8],0x0" 48c78538fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb38)) (bv 64 0x0))
a "mov qword ptr [rbp-0x4c0],0x0" 48c78540fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb40)) (bv 64 0x0))
a "mov qword ptr [rbp-0x4b8],0x0" 48c78548fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb48)) (bv 64 0x0))
a "mov dword ptr [rbp-0x538],0x40" c785c8faffff40000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffac8)) (bv 32 0x40))
a "mov dword ptr [rbp-0x534],0x0" c785ccfaffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffacc)) (bv 32 0x0))
a "mov qword ptr [rbp-0x4b0],0x0" 48c78550fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb50)) (bv 64 0x0))
a "mov dword ptr [rbp-0x530],0x0" c785d0faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffad0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x548],0x1" c785b8faffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab8)) (bv 32 0x1))
a "mov dword ptr [rbp-0x54c],0x0" c785b4faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab4)) (bv 32 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x540],0x1" c785c0faffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffac0)) (bv 32 0x1))
a "mov dword ptr [rbp-0x540],0x1" c785c0faffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffac0)) (bv 32 0x1))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x3a" c6003a 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x3a))
a "mov dword ptr [rbp-0x530],0x1" c785d0faffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffad0)) (bv 32 0x1))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x548],0x0" c785b8faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x548],0x0" c785b8faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x548],0x1" c785b8faffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab8)) (bv 32 0x1))
a "mov dword ptr [rbp-0x54c],0x0" c785b4faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab4)) (bv 32 0x0))
a "mov dword ptr [rbp-0x544],0x1" c785bcfaffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffabc)) (bv 32 0x1))
a "mov dword ptr [rbp-0x550],0x1" c785b0faffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffab0)) (bv 32 0x1))
a "mov dword ptr [rbp-0x53c],0x1" c785c4faffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffac4)) (bv 32 0x1))
a "mov qword ptr [rbp-0x4d0],0x1" 48c78530fbffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb30)) (bv 64 0x1))
a "mov dword ptr [rbp-0x534],0x61" c785ccfaffff61000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffacc)) (bv 32 0x61))
a "mov dword ptr [rbp-0x534],0x0" c785ccfaffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffacc)) (bv 32 0x0))
a "mov qword ptr [rbp-0x4f8],0x0" 48c78508fbffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffb08)) (bv 64 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x52c],0x0" c785d4faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffad4)) (bv 32 0x0))
a "mov dword ptr [rbp-0x52c],0x0" c785d4faffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffad4)) (bv 32 0x0))
a "mov byte ptr [rip+0x201148],0x1" c6054811200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201148)) (bv 8 0x1))
a "mov dword ptr [rbp-0x5c],0x3" c745a403000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa4)) (bv 32 0x3))
a "mov dword ptr [rbp-0x64],0x0" c7459c00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff9c)) (bv 32 0x0))
a "mov dword ptr [rbp-0x60],0x0" c745a000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa0)) (bv 32 0x0))
a "mov byte ptr [rbp-0x65],0x1" c6459b01 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff9b)) (bv 8 0x1))
a "mov byte ptr [rbp-0x65],0x0" c6459b00 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff9b)) (bv 8 0x0))
a "mov dword ptr [rbp-0x60],0x1" c745a001000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffa0)) (bv 32 0x1))
a "mov dword ptr [rbp-0x64],0x1" c7459c01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff9c)) (bv 32 0x1))
a "mov qword ptr [rbp-0x38],0x0" 48c745c800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x38],0x0" 48c745c800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffc8)) (bv 64 0x0))
a "mov byte ptr [rip+0x204568],0x1" c6056845200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x204568)) (bv 8 0x1))
a "mov dword ptr [rbp-0x210],0x0" c785f0fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x1d0],0x0" c78530feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe30)) (bv 32 0x0))
a "mov dword ptr [rbp-0x70],0x0" c7459000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff90)) (bv 32 0x0))
a "mov byte ptr [rbp-0x30],0x0" c645d000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd0)) (bv 8 0x0))
a "mov word ptr [rax],0x3732" 66c7003237 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 16 0x3732))
a "mov byte ptr [rax+0x2],0x0" c6400200 0x0 (storew 0 (+ (var rax) (bv 64 0x2)) (bv 8 0x0))
a "mov word ptr [rax],0x2038" 66c7003820 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 16 0x2038))
a "mov byte ptr [rax+0x2],0x0" c6400200 0x0 (storew 0 (+ (var rax) (bv 64 0x2)) (bv 8 0x0))
a "mov dword ptr [rax],0x203631" c70031362000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0x203631))
a "mov dword ptr [rax],0x203233" c70033322000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0x203233))
a "mov dword ptr [rax],0x203436" c70036342000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0x203436))
a "mov qword ptr [rbp-0x18],0x0" 48c745e800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x10],0x0" 48c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 64 0x0))
a "mov qword ptr [rbp-0x338],0x0" 48c785c8fcffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffcc8)) (bv 64 0x0))
a "mov dword ptr [rbp-0x340],0x0" c785c0fcffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffcc0)) (bv 32 0x0))
a "mov qword ptr [rbp-0x330],0x0" 48c785d0fcffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffcd0)) (bv 64 0x0))
a "mov dword ptr [rbp-0x340],0x0" c785c0fcffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffcc0)) (bv 32 0x0))
a "mov dword ptr [rbp-0x2f0],0x0" c78510fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffd10)) (bv 32 0x0))
a "mov dword ptr [rbp-0x320],0x1" c785e0fcffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffce0)) (bv 32 0x1))
a "mov dword ptr [rbp-0x4],0x1" c745fc01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x1))
a "mov dword ptr [rbp-0x4],0x1" c745fc01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x1))
a "mov dword ptr [rbp-0x14],0x0" c745ec00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffec)) (bv 32 0x0))
a "mov dword ptr [rbp-0x1c],0x0" c745e400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe4)) (bv 32 0x0))
a "mov dword ptr [rbp-0x18],0x0" c745e800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x4],0x0" c745fc00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x0))
a "mov qword ptr [rbp-0x1d8],0x0" 48c78528feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe28)) (bv 64 0x0))
a "mov qword ptr [rbp-0x1d0],0x0" 48c78530feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe30)) (bv 64 0x0))
a "mov qword ptr [rbp-0x1c8],0x0" 48c78538feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe38)) (bv 64 0x0))
a "mov qword ptr [rbp-0x1c0],0x0" 48c78540feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe40)) (bv 64 0x0))
a "mov qword ptr [rbp-0x1b8],0x0" 48c78548feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe48)) (bv 64 0x0))
a "mov byte ptr [rbp-0x215],0x0" c685ebfdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdeb)) (bv 8 0x0))
a "mov byte ptr [rbp-0x214],0x0" c685ecfdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdec)) (bv 8 0x0))
a "mov byte ptr [rbp-0x213],0x0" c685edfdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffded)) (bv 8 0x0))
a "mov qword ptr [rbp-0x1b0],0x0" 48c78550feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe50)) (bv 64 0x0))
a "mov dword ptr [rbp-0x20c],0xffffffff" c785f4fdffffffffffff 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf4)) (bv 32 0xffffffff))
a "mov dword ptr [rbp-0x208],0x0" c785f8fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x204],0x0" c785fcfdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdfc)) (bv 32 0x0))
a "mov dword ptr [rbp-0x200],0x0" c78500feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe00)) (bv 32 0x0))
a "mov dword ptr [rbp-0x1fc],0x0" c78504feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe04)) (bv 32 0x0))
a "mov dword ptr [rbp-0x1f8],0x20" c78508feffff20000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe08)) (bv 32 0x20))
a "mov dword ptr [rbp-0x1f4],0x0" c7850cfeffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe0c)) (bv 32 0x0))
a "mov dword ptr [rbp-0x1f0],0x0" c78510feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe10)) (bv 32 0x0))
a "mov qword ptr [rbp-0x1a8],0x0" 48c78558feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe58)) (bv 64 0x0))
a "mov qword ptr [rbp-0x1a0],0x0" 48c78560feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe60)) (bv 64 0x0))
a "mov qword ptr [rbp-0x198],0x0" 48c78568feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe68)) (bv 64 0x0))
a "mov byte ptr [rbp-0x212],0x0" c685eefdffff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdee)) (bv 8 0x0))
a "mov dword ptr [rbp-0x1e8],0x40" c78518feffff40000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe18)) (bv 32 0x40))
a "mov byte ptr [rbp-0x212],0x1" c685eefdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdee)) (bv 8 0x1))
a "mov dword ptr [rbp-0x200],0x1" c78500feffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe00)) (bv 32 0x1))
a "mov dword ptr [rip+0x202b89],0x1" c705892b200001000000 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202b89)) (bv 32 0x1))
a "mov dword ptr [rbp-0x208],0x1" c785f8fdffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf8)) (bv 32 0x1))
a "mov dword ptr [rbp-0x208],0x2" c785f8fdffff02000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf8)) (bv 32 0x2))
a "mov byte ptr [rbp-0x215],0x1" c685ebfdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdeb)) (bv 8 0x1))
a "mov dword ptr [rbp-0x208],0x3" c785f8fdffff03000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf8)) (bv 32 0x3))
a "mov byte ptr [rip+0x202af2],0x1" c605f22a200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x202af2)) (bv 8 0x1))
a "mov dword ptr [rbp-0x1fc],0x1" c78504feffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe04)) (bv 32 0x1))
a "mov byte ptr [rbp-0x213],0x1" c685edfdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffded)) (bv 8 0x1))
a "mov byte ptr [rip+0x2029f3],0x1" c605f329200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x2029f3)) (bv 8 0x1))
a "mov byte ptr [rbp-0x214],0x1" c685ecfdffff01 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdec)) (bv 8 0x1))
a "mov dword ptr [rbp-0x1f4],0x1" c7850cfeffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe0c)) (bv 32 0x1))
a "mov dword ptr [rbp-0x1fc],0x0" c78504feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe04)) (bv 32 0x0))
a "mov dword ptr [rbp-0x204],0x1" c785fcfdffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdfc)) (bv 32 0x1))
a "mov dword ptr [rbp-0x1fc],0x0" c78504feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe04)) (bv 32 0x0))
a "mov dword ptr [rbp-0x1fc],0x0" c78504feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe04)) (bv 32 0x0))
a "mov dword ptr [rbp-0x1fc],0x1" c78504feffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe04)) (bv 32 0x1))
a "mov dword ptr [rbp-0x1fc],0x0" c78504feffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe04)) (bv 32 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x3a" c6003a 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x3a))
a "mov dword ptr [rbp-0x210],0x0" c785f0fdffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffdf0)) (bv 32 0x0))
a "mov byte ptr [rbp+rax*1-0x120],0x0" c68405e0feffff00 0x0 (storew 0 (+ (+ (var rbp) (* (var rax) (bv 64 0x1))) (bv 64 0xfffffffffffffee0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x1fc],0x1" c78504feffff01000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffe04)) (bv 32 0x1))
a "mov byte ptr [rbp+rax*1-0x120],0x0" c68405e0feffff00 0x0 (storew 0 (+ (+ (var rbp) (* (var rax) (bv 64 0x1))) (bv 64 0xfffffffffffffee0)) (bv 8 0x0))
a "mov byte ptr [rbp+rax*1-0x120],0x0" c68405e0feffff00 0x0 (storew 0 (+ (+ (var rbp) (* (var rax) (bv 64 0x1))) (bv 64 0xfffffffffffffee0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rip+0x201cd3],0x1" c605d31c200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x201cd3)) (bv 8 0x1))
a "mov byte ptr [rip+0x206f90],0x1" c605906f200001 0x0 (storew 0 (+ (bv 64 0x0) (bv 64 0x206f90)) (bv 8 0x1))
a "mov qword ptr [rbp-0x10],0x0" 48c745f000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff0)) (bv 64 0x0))
a "mov byte ptr [rax+0xc8],0x0" c680c800000000 0x0 (storew 0 (+ (var rax) (bv 64 0xc8)) (bv 8 0x0))
a "mov dword ptr [rax+0xb0],0xffffffff" c780b0000000ffffffff 0x0 (storew 0 (+ (var rax) (bv 64 0xb0)) (bv 32 0xffffffff))
a "mov dword ptr [rax+0x74],0x40" c7407440000000 0x0 (storew 0 (+ (var rax) (bv 64 0x74)) (bv 32 0x40))
a "mov dword ptr [rax+0xbc],0xffffffff" c780bc000000ffffffff 0x0 (storew 0 (+ (var rax) (bv 64 0xbc)) (bv 32 0xffffffff))
a "mov qword ptr [rax+0x10],0x9c4" 48c74010c4090000 0x0 (storew 0 (+ (var rax) (bv 64 0x10)) (bv 64 0x9c4))
a "mov dword ptr [rax+0x6c],0x1000" c7406c00100000 0x0 (storew 0 (+ (var rax) (bv 64 0x6c)) (bv 32 0x1000))
a "mov dword ptr [rax+0xc0],0xa" c780c00000000a000000 0x0 (storew 0 (+ (var rax) (bv 64 0xc0)) (bv 32 0xa))
a "mov qword ptr [rax+0x8],0x0" 48c7400800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x8)) (bv 64 0x0))
a "mov qword ptr [rax+0x20],0x1000" 48c7402000100000 0x0 (storew 0 (+ (var rax) (bv 64 0x20)) (bv 64 0x1000))
a "mov qword ptr [rax],0x0" 48c70000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 64 0x0))
a "mov dword ptr [rax+0x60],0x0" c7406000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x60)) (bv 32 0x0))
a "mov dword ptr [rax+0x38],0x0" c7403800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x38)) (bv 32 0x0))
a "mov qword ptr [rax+0x48],0x0" 48c7404800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x48)) (bv 64 0x0))
a "mov qword ptr [rax+0x50],0x1000" 48c7405000100000 0x0 (storew 0 (+ (var rax) (bv 64 0x50)) (bv 64 0x1000))
a "mov qword ptr [rax],0x0" 48c70000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 64 0x0))
a "mov qword ptr [rax+0x18],0x0" 48c7401800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x18)) (bv 64 0x0))
a "mov dword ptr [rax+0xc4],0x0" c780c400000000000000 0x0 (storew 0 (+ (var rax) (bv 64 0xc4)) (bv 32 0x0))
a "mov qword ptr [rax+0x40],0x0" 48c7404000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x40)) (bv 64 0x0))
a "mov qword ptr [rax+0x8],0x0" 48c7400800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x8)) (bv 64 0x0))
a "mov qword ptr [rax],0x0" 48c70000000000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 64 0x0))
a "mov qword ptr [rax+0x18],0x0" 48c7401800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x18)) (bv 64 0x0))
a "mov dword ptr [rbp-0x8],0x0" c745f800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff8)) (bv 32 0x0))
a "mov dword ptr [rbp-0x4],0x0" c745fc00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffffc)) (bv 32 0x0))
a "mov byte ptr [rbp-0xa],0x1" c645f601 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff6)) (bv 8 0x1))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x8],0x0" c745f800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff8)) (bv 32 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rax+0x28],0x0" 48c7402800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x28)) (bv 64 0x0))
a "mov byte ptr [rax+0x4],0x0" c6400400 0x0 (storew 0 (+ (var rax) (bv 64 0x4)) (bv 8 0x0))
a "mov byte ptr [rax+0x5],0x0" c6400500 0x0 (storew 0 (+ (var rax) (bv 64 0x5)) (bv 8 0x0))
a "mov dword ptr [rax+0x8],0x1" c7400801000000 0x0 (storew 0 (+ (var rax) (bv 64 0x8)) (bv 32 0x1))
a "mov byte ptr [rbp-0xa],0x0" c645f600 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff6)) (bv 8 0x0))
a "mov qword ptr [rbp-0x20],0x0" 48c745e000000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe0)) (bv 64 0x0))
a "mov dword ptr [rbp-0x18],0x0" c745e800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe8)) (bv 32 0x0))
a "mov qword ptr [rax+0x48],0x0" 48c7404800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x48)) (bv 64 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rax+0x48],0x0" 48c7404800000000 0x0 (storew 0 (+ (var rax) (bv 64 0x48)) (bv 64 0x0))
a "mov dword ptr [rbp-0x2c],0x0" c745d400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffd4)) (bv 32 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov byte ptr [rax],0x24" c60024 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x24))
a "mov qword ptr [rax+0x8],0x1" 48c7400801000000 0x0 (storew 0 (+ (var rax) (bv 64 0x8)) (bv 64 0x1))
a "mov byte ptr [rax],0x7d" c6007d 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x7d))
a "mov dword ptr [rbp-0x14],0x0" c745ec00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffec)) (bv 32 0x0))
a "mov dword ptr [rbp-0x14],0x22" c745ec22000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffec)) (bv 32 0x22))
a "mov dword ptr [rbp-0x14],0x7e" c745ec7e000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffec)) (bv 32 0x7e))
a "mov byte ptr [rax],0x2a" c6002a 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x2a))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov qword ptr [rbp-0x18],0x0" 48c745e800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe8)) (bv 64 0x0))
a "mov dword ptr [rax+0xc4],0x1" c780c400000001000000 0x0 (storew 0 (+ (var rax) (bv 64 0xc4)) (bv 32 0x1))
a "mov dword ptr [rax+0xc4],0x1" c780c400000001000000 0x0 (storew 0 (+ (var rax) (bv 64 0xc4)) (bv 32 0x1))
a "mov dword ptr [rax+0xc4],0x1" c780c400000001000000 0x0 (storew 0 (+ (var rax) (bv 64 0xc4)) (bv 32 0x1))
a "mov byte ptr [rbp-0x1],0x0" c645ff00 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffff)) (bv 8 0x0))
a "mov qword ptr [rbp-0x8],0x0" 48c745f800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff8)) (bv 64 0x0))
a "mov qword ptr [rbp-0x8],0x0" 48c745f800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff8)) (bv 64 0x0))
a "mov dword ptr [rbp-0x8],0x0" c745f800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xfffffffffffffff8)) (bv 32 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x1c],0x0" c745e400000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe4)) (bv 32 0x0))
a "mov dword ptr [rbp-0x18],0x0" c745e800000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffffe8)) (bv 32 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rbp-0x84],0x0" c7857cffffff00000000 0x0 (storew 0 (+ (var rbp) (bv 64 0xffffffffffffff7c)) (bv 32 0x0))
a "mov byte ptr [rax],0x0" c60000 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 8 0x0))
a "mov dword ptr [rax],0xffffffff" c700ffffffff 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0xffffffff))
a "mov dword ptr [rax],0xffffffff" c700ffffffff 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0xffffffff))
a "mov dword ptr [rax],0xffffffff" c700ffffffff 0x0 (storew 0 (+ (var rax) (bv 64 0x0)) (bv 32 0xffffffff))
a "mov dword ptr [esp+0x1c],0xc6670001" 67c744241c010067c6 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x1c)) (bv 32 0xc6670001))
a "mov byte ptr [esi],0x86" 67c60686 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 8 0x86))
a "mov word ptr [esi],0x4020" 6766c7062040 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 16 0x4020))
a "mov word ptr [esi],0x4020" 6766c7062040 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 16 0x4020))
a "mov dword ptr [esi],0x404020" 67c70620404000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 32 0x404020))
a "mov byte ptr [esp+0x25],0xc0" 67c6442425c0 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x25)) (bv 8 0xc0))
a "mov dword ptr [esp+0x20],0x66670014" 67c744242014006766 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x20)) (bv 32 0x66670014))
a "mov dword ptr [esp+0x1c],0x534d4150" 67c744241c50414d53 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x1c)) (bv 32 0x534d4150))
a "mov dword ptr [edx],0x74000000" 67c70200000074 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rdx))) (bv 64 0x0)) (bv 32 0x74000000))
a "mov dword ptr [eax+eax*1],0xa740000" 67c704000000740a 0x0 (storew 0 (+ (+ (cast 64 false (cast 32 false (var rax))) (* (cast 64 false (cast 32 false (var rax))) (bv 64 0x1))) (bv 64 0x0)) (bv 32 0xa740000))
a "mov dword ptr [esp],0x1" 67c7042401000000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x0)) (bv 32 0x1))
a "mov dword ptr [esp+0x4],0x0" 67c744240400000000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x4)) (bv 32 0x0))
a "mov dword ptr [esp+0x4],0x0" 67c744240400000000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x4)) (bv 32 0x0))
a "mov dword ptr [esi],0xb0003e04" 67c706043e00b0 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 32 0xb0003e04))
a "mov dword ptr [esi],0xb8003e04" 67c706043e00b8 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 32 0xb8003e04))
a "mov word ptr [esi],0x3d04" 6766c706043d 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 16 0x3d04))
a "mov dword ptr [esp+0xc],0x3" 67c744240c03000000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0xc)) (bv 32 0x3))
a "mov dword ptr [esp+0xc],0x1" 67c744240c01000000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0xc)) (bv 32 0x1))
a "mov word ptr [esp+0x10],0x0" 6766c74424100000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x10)) (bv 16 0x0))
a "mov word ptr [esp+0x14],0x0" 6766c74424140000 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x14)) (bv 16 0x0))
a "mov dword ptr [esp+0x24],0x66671a00" 67c7442424001a6766 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x24)) (bv 32 0x66671a00))
a "mov word ptr [esi],0x5078" 6766c7067850 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 16 0x5078))
a "mov byte ptr [esi],0x7f" 67c6067f 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 8 0x7f))
a "mov dword ptr [esi],0x15078" 67c70678500100 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 32 0x15078))
a "mov word ptr [esi],0x5078" 6766c7067850 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 16 0x5078))
a "mov dword ptr [esp+0x24],0x66670f00" 67c7442424000f6766 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsp))) (bv 64 0x24)) (bv 32 0x66670f00))
a "mov word ptr [esi],0x5084" 6766c7068450 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rsi))) (bv 64 0x0)) (bv 16 0x5084))
a "mov dword ptr [ebp-0x44],0x31660305" 67c745bc05036631 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rbp))) (bv 64 0xffffffffffffffbc)) (bv 32 0x31660305))
a "mov dword ptr [ebp-0x4c],0x47534943" 67c745b443495347 0x0 (storew 0 (+ (cast 64 false (cast 32 false (var rbp))) (bv 64 0xffffffffffffffb4)) (bv 32 0x47534943))
aB "mov rax, qword[r12]" 498b0424
aB "mov rax, qword[r13]" 498b4500
aB "mov rsp, qword[r12 - 0x12]"  498b6424ee
aB "mov qword[r12], rsp" 49892424
aB "mov qword[r8 + 0x20], rax" 49894020
aB "mov r12, qword[r12]" 4d8b2424
a "mov eax,r12d" 4489e0 0x0 (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (cast 32 false (var r12)))))
ad "movabs r12, 1" 49bc0100000000000000
a "inc al" fec0 0x0 (seq (set _op (cast 8 false (var rax))) (set _result (+ (var _op) (bv 8 0x1))) (set rax (| (& (var rax) (~ (bv 64 0xff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc BYTE PTR [r12]" 41fe0424 0x0 (seq (set _op (loadw 0 8 (+ (cast 64 false (var r12)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 8 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc BYTE PTR [rbx+0x18]" fe4318 0x0 (seq (set _op (loadw 0 8 (+ (var rbx) (bv 64 0x18)))) (set _result (+ (var _op) (bv 8 0x1))) (storew 0 (+ (var rbx) (bv 64 0x18)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc BYTE PTR [rdi+0x18]" fe4718 0x0 (seq (set _op (loadw 0 8 (+ (var rdi) (bv 64 0x18)))) (set _result (+ (var _op) (bv 8 0x1))) (storew 0 (+ (var rdi) (bv 64 0x18)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc BYTE PTR [rsi+0x1a]" fe461a 0x0 (seq (set _op (loadw 0 8 (+ (var rsi) (bv 64 0x1a)))) (set _result (+ (var _op) (bv 8 0x1))) (storew 0 (+ (var rsi) (bv 64 0x1a)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc cl" fec1 0x0 (seq (set _op (cast 8 false (var rcx))) (set _result (+ (var _op) (bv 8 0x1))) (set rcx (| (& (var rcx) (~ (bv 64 0xff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc dl" fec2 0x0 (seq (set _op (cast 8 false (var rdx))) (set _result (+ (var _op) (bv 8 0x1))) (set rdx (| (& (var rdx) (~ (bv 64 0xff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [r12]" 41ff0424 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r12)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [r12+0x28]" 41ff442428 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r12)) (bv 64 0x28)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x28)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [r13+0x70]" 41ff4570 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r13)) (bv 64 0x70)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r13)) (bv 64 0x70)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [r14]" 41ff06 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r14)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r14)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [r14+0x134]" 41ff8634010000 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r14)) (bv 64 0x134)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r14)) (bv 64 0x134)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [r15]" 41ff07 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r15)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r15)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [r15+0x88]" 41ff8788000000 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r15)) (bv 64 0x88)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r15)) (bv 64 0x88)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rax]" ff00 0x0 (seq (set _op (loadw 0 32 (+ (var rax) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rax) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rax+0x14c]" ff804c010000 0x0 (seq (set _op (loadw 0 32 (+ (var rax) (bv 64 0x14c)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rax) (bv 64 0x14c)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rax+rdx*1]" ff0410 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rax) (* (var rdx) (bv 64 0x1))) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rax) (* (var rdx) (bv 64 0x1))) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rax+rdx*1+0x109]" ff841009010000 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rax) (* (var rdx) (bv 64 0x1))) (bv 64 0x109)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rax) (* (var rdx) (bv 64 0x1))) (bv 64 0x109)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rbp+0x10]" ff4510 0x0 (seq (set _op (loadw 0 32 (+ (var rbp) (bv 64 0x10)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rbp) (bv 64 0x10)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rbx]" ff03 0x0 (seq (set _op (loadw 0 32 (+ (var rbx) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rbx) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rbx+0x18]" ff4318 0x0 (seq (set _op (loadw 0 32 (+ (var rbx) (bv 64 0x18)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rbx) (bv 64 0x18)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rbx+0x20]" ff4320 0x0 (seq (set _op (loadw 0 32 (+ (var rbx) (bv 64 0x20)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rbx) (bv 64 0x20)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rcx]" ff01 0x0 (seq (set _op (loadw 0 32 (+ (var rcx) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rcx) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rcx+0x4]" ff4104 0x0 (seq (set _op (loadw 0 32 (+ (var rcx) (bv 64 0x4)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rcx) (bv 64 0x4)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rdi]" ff07 0x0 (seq (set _op (loadw 0 32 (+ (var rdi) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rdi) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rdi+0x28]" ff4728 0x0 (seq (set _op (loadw 0 32 (+ (var rdi) (bv 64 0x28)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rdi) (bv 64 0x28)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rdx]" ff02 0x0 (seq (set _op (loadw 0 32 (+ (var rdx) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rdx) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rdx+0x10]" ff4210 0x0 (seq (set _op (loadw 0 32 (+ (var rdx) (bv 64 0x10)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rdx) (bv 64 0x10)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rdx+rax*1]" ff0402 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rdx) (* (var rax) (bv 64 0x1))) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rdx) (* (var rax) (bv 64 0x1))) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rip+0x2009c8]" ff05c8092000 0x0 (seq (set _op (loadw 0 32 (+ (bv 64 0x0) (bv 64 0x2009c8)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (bv 64 0x0) (bv 64 0x2009c8)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rsi+0x8]" ff4608 0x0 (seq (set _op (loadw 0 32 (+ (var rsi) (bv 64 0x8)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rsi) (bv 64 0x8)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rsp]" ff0424 0x0 (seq (set _op (loadw 0 32 (+ (var rsp) (bv 64 0x0)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rsp) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rsp+0x10]" ff442410 0x0 (seq (set _op (loadw 0 32 (+ (var rsp) (bv 64 0x10)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (var rsp) (bv 64 0x10)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rsp+rax*4+0x400]" ff848400040000 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rsp) (* (var rax) (bv 64 0x4))) (bv 64 0x400)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rsp) (* (var rax) (bv 64 0x4))) (bv 64 0x400)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc DWORD PTR [rsp+rbp*4+0x2b8]" ff84acb8020000 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rsp) (* (var rbp) (bv 64 0x4))) (bv 64 0x2b8)))) (set _result (+ (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rsp) (* (var rbp) (bv 64 0x4))) (bv 64 0x2b8)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc eax" ffc0 0x0 (seq (set _op (cast 32 false (var rax))) (set _result (+ (var _op) (bv 32 0x1))) (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc ebp" ffc5 0x0 (seq (set _op (cast 32 false (var rbp))) (set _result (+ (var _op) (bv 32 0x1))) (set rbp (| (& (var rbp) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc ebx" ffc3 0x0 (seq (set _op (cast 32 false (var rbx))) (set _result (+ (var _op) (bv 32 0x1))) (set rbx (| (& (var rbx) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc ecx" ffc1 0x0 (seq (set _op (cast 32 false (var rcx))) (set _result (+ (var _op) (bv 32 0x1))) (set rcx (| (& (var rcx) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc edi" ffc7 0x0 (seq (set _op (cast 32 false (var rdi))) (set _result (+ (var _op) (bv 32 0x1))) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc edx" ffc2 0x0 (seq (set _op (cast 32 false (var rdx))) (set _result (+ (var _op) (bv 32 0x1))) (set rdx (| (& (var rdx) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r10]" 49ff02 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r10)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r10)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r10+rax*1]" 49ff0402 0x0 (seq (set _op (loadw 0 64 (+ (+ (cast 64 false (var r10)) (* (var rax) (bv 64 0x1))) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (+ (cast 64 false (var r10)) (* (var rax) (bv 64 0x1))) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r11]" 49ff03 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r11)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r11)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r11+0x18]" 49ff4318 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r11)) (bv 64 0x18)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r11)) (bv 64 0x18)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r12]" 49ff0424 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r12)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r12+0x20]" 49ff442420 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r12)) (bv 64 0x20)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x20)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r13+0x0]" 49ff4500 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r13)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r13)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r14]" 49ff06 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r14)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r14)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r14+0x20]" 49ff4620 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r14)) (bv 64 0x20)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r14)) (bv 64 0x20)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r15]" 49ff07 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r15)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r15)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r8]" 49ff00 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r8)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r8)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [r9]" 49ff01 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r9)) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r9)) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rax]" 48ff00 0x0 (seq (set _op (loadw 0 64 (+ (var rax) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rax) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rax+0x20]" 48ff4020 0x0 (seq (set _op (loadw 0 64 (+ (var rax) (bv 64 0x20)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rax) (bv 64 0x20)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rax-0x8]" 48ff40f8 0x0 (seq (set _op (loadw 0 64 (+ (var rax) (bv 64 0xfffffffffffffff8)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rax) (bv 64 0xfffffffffffffff8)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rbp+0xb0]" 48ff85b0000000 0x0 (seq (set _op (loadw 0 64 (+ (var rbp) (bv 64 0xb0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rbp) (bv 64 0xb0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rbx]" 48ff03 0x0 (seq (set _op (loadw 0 64 (+ (var rbx) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rbx) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rbx+0x138]" 48ff8338010000 0x0 (seq (set _op (loadw 0 64 (+ (var rbx) (bv 64 0x138)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rbx) (bv 64 0x138)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rcx]" 48ff01 0x0 (seq (set _op (loadw 0 64 (+ (var rcx) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rcx) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rcx+0x8]" 48ff4108 0x0 (seq (set _op (loadw 0 64 (+ (var rcx) (bv 64 0x8)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rcx) (bv 64 0x8)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rdi]" 48ff07 0x0 (seq (set _op (loadw 0 64 (+ (var rdi) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rdi) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rdi+0x10]" 48ff4710 0x0 (seq (set _op (loadw 0 64 (+ (var rdi) (bv 64 0x10)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rdi) (bv 64 0x10)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rdi+rax*1+0xe1]" 48ff8407e1000000 0x0 (seq (set _op (loadw 0 64 (+ (+ (var rdi) (* (var rax) (bv 64 0x1))) (bv 64 0xe1)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (+ (var rdi) (* (var rax) (bv 64 0x1))) (bv 64 0xe1)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rdx]" 48ff02 0x0 (seq (set _op (loadw 0 64 (+ (var rdx) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rdx) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rdx+0x10]" 48ff4210 0x0 (seq (set _op (loadw 0 64 (+ (var rdx) (bv 64 0x10)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rdx) (bv 64 0x10)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rip+0x2121a1]" 48ff05a1212100 0x0 (seq (set _op (loadw 0 64 (+ (bv 64 0x0) (bv 64 0x2121a1)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (bv 64 0x0) (bv 64 0x2121a1)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rsi]" 48ff06 0x0 (seq (set _op (loadw 0 64 (+ (var rsi) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rsi) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rsp]" 48ff0424 0x0 (seq (set _op (loadw 0 64 (+ (var rsp) (bv 64 0x0)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rsp) (bv 64 0x0)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc QWORD PTR [rsp+0x1b8]" 48ff8424b8010000 0x0 (seq (set _op (loadw 0 64 (+ (var rsp) (bv 64 0x1b8)))) (set _result (+ (var _op) (bv 64 0x1))) (storew 0 (+ (var rsp) (bv 64 0x1b8)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r10" 49ffc2 0x0 (seq (set _op (var r10)) (set _result (+ (var _op) (bv 64 0x1))) (set r10 (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r10d" 41ffc2 0x0 (seq (set _op (cast 32 false (var r10))) (set _result (+ (var _op) (bv 32 0x1))) (set r10 (| (& (var r10) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r11" 49ffc3 0x0 (seq (set _op (var r11)) (set _result (+ (var _op) (bv 64 0x1))) (set r11 (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r11d" 41ffc3 0x0 (seq (set _op (cast 32 false (var r11))) (set _result (+ (var _op) (bv 32 0x1))) (set r11 (| (& (var r11) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r12" 49ffc4 0x0 (seq (set _op (var r12)) (set _result (+ (var _op) (bv 64 0x1))) (set r12 (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r12d" 41ffc4 0x0 (seq (set _op (cast 32 false (var r12))) (set _result (+ (var _op) (bv 32 0x1))) (set r12 (| (& (var r12) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r13" 49ffc5 0x0 (seq (set _op (var r13)) (set _result (+ (var _op) (bv 64 0x1))) (set r13 (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r13d" 41ffc5 0x0 (seq (set _op (cast 32 false (var r13))) (set _result (+ (var _op) (bv 32 0x1))) (set r13 (| (& (var r13) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r14" 49ffc6 0x0 (seq (set _op (var r14)) (set _result (+ (var _op) (bv 64 0x1))) (set r14 (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r14d" 41ffc6 0x0 (seq (set _op (cast 32 false (var r14))) (set _result (+ (var _op) (bv 32 0x1))) (set r14 (| (& (var r14) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r15" 49ffc7 0x0 (seq (set _op (var r15)) (set _result (+ (var _op) (bv 64 0x1))) (set r15 (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r15d" 41ffc7 0x0 (seq (set _op (cast 32 false (var r15))) (set _result (+ (var _op) (bv 32 0x1))) (set r15 (| (& (var r15) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r8" 49ffc0 0x0 (seq (set _op (var r8)) (set _result (+ (var _op) (bv 64 0x1))) (set r8 (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r8d" 41ffc0 0x0 (seq (set _op (cast 32 false (var r8))) (set _result (+ (var _op) (bv 32 0x1))) (set r8 (| (& (var r8) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r9" 49ffc1 0x0 (seq (set _op (var r9)) (set _result (+ (var _op) (bv 64 0x1))) (set r9 (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc r9d" 41ffc1 0x0 (seq (set _op (cast 32 false (var r9))) (set _result (+ (var _op) (bv 32 0x1))) (set r9 (| (& (var r9) (~ (bv 64 0xffffffff))) (cast 64 false (var _result)))) (set _result (var _result)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc rax" 48ffc0 0x0 (seq (set _op (var rax)) (set _result (+ (var _op) (bv 64 0x1))) (set rax (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc rbp" 48ffc5 0x0 (seq (set _op (var rbp)) (set _result (+ (var _op) (bv 64 0x1))) (set rbp (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc rbx" 48ffc3 0x0 (seq (set _op (var rbx)) (set _result (+ (var _op) (bv 64 0x1))) (set rbx (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc rcx" 48ffc1 0x0 (seq (set _op (var rcx)) (set _result (+ (var _op) (bv 64 0x1))) (set rcx (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc rdi" 48ffc7 0x0 (seq (set _op (var rdi)) (set _result (+ (var _op) (bv 64 0x1))) (set rdi (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc rdx" 48ffc2 0x0 (seq (set _op (var rdx)) (set _result (+ (var _op) (bv 64 0x1))) (set rdx (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc rsi" 48ffc6 0x0 (seq (set _op (var rsi)) (set _result (+ (var _op) (bv 64 0x1))) (set rsi (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "inc WORD PTR [rdi+0x88]" 66ff8788000000 0x0 (seq (set _op (loadw 0 16 (+ (var rdi) (bv 64 0x88)))) (set _result (+ (var _op) (bv 16 0x1))) (storew 0 (+ (var rdi) (bv 64 0x88)) (var _result)) (set _result (var _result)) (set _x (var _op)) (set _y (bv 16 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (msb (var _y))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (! (msb (var _y)))))) (set af (|| (|| (&& (msb (cast 4 false (var _x))) (msb (cast 4 false (var _y)))) (&& (! (msb (cast 4 false (var _result)))) (msb (cast 4 false (var _y))))) (&& (msb (cast 4 false (var _x))) (! (msb (cast 4 false (var _result))))))) (set _result (var _result)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))))
a "dec al" fec8 0x0 (seq (set _op (cast 8 false (var rax))) (set _dec (- (var _op) (bv 8 0x1))) (set rax (| (& (var rax) (~ (bv 64 0xff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec BYTE PTR [r12]" 41fe0c24 0x0 (seq (set _op (loadw 0 8 (+ (cast 64 false (var r12)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 8 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec BYTE PTR [rbx+0x18]" fe4b18 0x0 (seq (set _op (loadw 0 8 (+ (var rbx) (bv 64 0x18)))) (set _dec (- (var _op) (bv 8 0x1))) (storew 0 (+ (var rbx) (bv 64 0x18)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec BYTE PTR [rdi+0x18]" fe4f18 0x0 (seq (set _op (loadw 0 8 (+ (var rdi) (bv 64 0x18)))) (set _dec (- (var _op) (bv 8 0x1))) (storew 0 (+ (var rdi) (bv 64 0x18)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec BYTE PTR [rsi+0x1a]" fe4e1a 0x0 (seq (set _op (loadw 0 8 (+ (var rsi) (bv 64 0x1a)))) (set _dec (- (var _op) (bv 8 0x1))) (storew 0 (+ (var rsi) (bv 64 0x1a)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec cl" fec9 0x0 (seq (set _op (cast 8 false (var rcx))) (set _dec (- (var _op) (bv 8 0x1))) (set rcx (| (& (var rcx) (~ (bv 64 0xff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec dl" feca 0x0 (seq (set _op (cast 8 false (var rdx))) (set _dec (- (var _op) (bv 8 0x1))) (set rdx (| (& (var rdx) (~ (bv 64 0xff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 8 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [r12]" 41ff0c24 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r12)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [r12+0x28]" 41ff4c2428 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r12)) (bv 64 0x28)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x28)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [r13+0x70]" 41ff4d70 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r13)) (bv 64 0x70)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r13)) (bv 64 0x70)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [r14]" 41ff0e 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r14)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r14)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [r14+0x134]" 41ff8e34010000 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r14)) (bv 64 0x134)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r14)) (bv 64 0x134)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [r15]" 41ff0f 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r15)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r15)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [r15+0x88]" 41ff8f88000000 0x0 (seq (set _op (loadw 0 32 (+ (cast 64 false (var r15)) (bv 64 0x88)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (cast 64 false (var r15)) (bv 64 0x88)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rax]" ff08 0x0 (seq (set _op (loadw 0 32 (+ (var rax) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rax) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rax+0x14c]" ff884c010000 0x0 (seq (set _op (loadw 0 32 (+ (var rax) (bv 64 0x14c)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rax) (bv 64 0x14c)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rax+rdx*1]" ff0c10 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rax) (* (var rdx) (bv 64 0x1))) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rax) (* (var rdx) (bv 64 0x1))) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rax+rdx*1+0x109]" ff8c1009010000 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rax) (* (var rdx) (bv 64 0x1))) (bv 64 0x109)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rax) (* (var rdx) (bv 64 0x1))) (bv 64 0x109)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rbp+0x10]" ff4d10 0x0 (seq (set _op (loadw 0 32 (+ (var rbp) (bv 64 0x10)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rbp) (bv 64 0x10)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rbx]" ff0b 0x0 (seq (set _op (loadw 0 32 (+ (var rbx) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rbx) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rbx+0x18]" ff4b18 0x0 (seq (set _op (loadw 0 32 (+ (var rbx) (bv 64 0x18)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rbx) (bv 64 0x18)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rbx+0x20]" ff4b20 0x0 (seq (set _op (loadw 0 32 (+ (var rbx) (bv 64 0x20)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rbx) (bv 64 0x20)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rcx]" ff09 0x0 (seq (set _op (loadw 0 32 (+ (var rcx) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rcx) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rcx+0x4]" ff4904 0x0 (seq (set _op (loadw 0 32 (+ (var rcx) (bv 64 0x4)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rcx) (bv 64 0x4)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rdi]" ff0f 0x0 (seq (set _op (loadw 0 32 (+ (var rdi) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rdi) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rdi+0x28]" ff4f28 0x0 (seq (set _op (loadw 0 32 (+ (var rdi) (bv 64 0x28)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rdi) (bv 64 0x28)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rdx]" ff0a 0x0 (seq (set _op (loadw 0 32 (+ (var rdx) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rdx) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rdx+0x10]" ff4a10 0x0 (seq (set _op (loadw 0 32 (+ (var rdx) (bv 64 0x10)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rdx) (bv 64 0x10)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rdx+rax*1]" ff0c02 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rdx) (* (var rax) (bv 64 0x1))) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rdx) (* (var rax) (bv 64 0x1))) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rip+0x2009c8]" ff0dc8092000 0x0 (seq (set _op (loadw 0 32 (+ (bv 64 0x0) (bv 64 0x2009c8)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (bv 64 0x0) (bv 64 0x2009c8)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rsi+0x8]" ff4e08 0x0 (seq (set _op (loadw 0 32 (+ (var rsi) (bv 64 0x8)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rsi) (bv 64 0x8)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rsp]" ff0c24 0x0 (seq (set _op (loadw 0 32 (+ (var rsp) (bv 64 0x0)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rsp) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rsp+0x10]" ff4c2410 0x0 (seq (set _op (loadw 0 32 (+ (var rsp) (bv 64 0x10)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (var rsp) (bv 64 0x10)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rsp+rax*4+0x400]" ff8c8400040000 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rsp) (* (var rax) (bv 64 0x4))) (bv 64 0x400)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rsp) (* (var rax) (bv 64 0x4))) (bv 64 0x400)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec DWORD PTR [rsp+rbp*4+0x2b8]" ff8cacb8020000 0x0 (seq (set _op (loadw 0 32 (+ (+ (var rsp) (* (var rbp) (bv 64 0x4))) (bv 64 0x2b8)))) (set _dec (- (var _op) (bv 32 0x1))) (storew 0 (+ (+ (var rsp) (* (var rbp) (bv 64 0x4))) (bv 64 0x2b8)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec eax" ffc8 0x0 (seq (set _op (cast 32 false (var rax))) (set _dec (- (var _op) (bv 32 0x1))) (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec ebp" ffcd 0x0 (seq (set _op (cast 32 false (var rbp))) (set _dec (- (var _op) (bv 32 0x1))) (set rbp (| (& (var rbp) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec ebx" ffcb 0x0 (seq (set _op (cast 32 false (var rbx))) (set _dec (- (var _op) (bv 32 0x1))) (set rbx (| (& (var rbx) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec ecx" ffc9 0x0 (seq (set _op (cast 32 false (var rcx))) (set _dec (- (var _op) (bv 32 0x1))) (set rcx (| (& (var rcx) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec edi" ffcf 0x0 (seq (set _op (cast 32 false (var rdi))) (set _dec (- (var _op) (bv 32 0x1))) (set rdi (| (& (var rdi) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec edx" ffca 0x0 (seq (set _op (cast 32 false (var rdx))) (set _dec (- (var _op) (bv 32 0x1))) (set rdx (| (& (var rdx) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r10]" 49ff0a 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r10)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r10)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r10+rax*1]" 49ff0c02 0x0 (seq (set _op (loadw 0 64 (+ (+ (cast 64 false (var r10)) (* (var rax) (bv 64 0x1))) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (+ (cast 64 false (var r10)) (* (var rax) (bv 64 0x1))) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r11]" 49ff0b 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r11)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r11)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r11+0x18]" 49ff4b18 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r11)) (bv 64 0x18)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r11)) (bv 64 0x18)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r12]" 49ff0c24 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r12)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r12+0x20]" 49ff4c2420 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r12)) (bv 64 0x20)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r12)) (bv 64 0x20)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r13+0x0]" 49ff4d00 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r13)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r13)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r14]" 49ff0e 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r14)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r14)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r14+0x20]" 49ff4e20 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r14)) (bv 64 0x20)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r14)) (bv 64 0x20)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r15]" 49ff0f 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r15)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r15)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r8]" 49ff08 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r8)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r8)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [r9]" 49ff09 0x0 (seq (set _op (loadw 0 64 (+ (cast 64 false (var r9)) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (cast 64 false (var r9)) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rax]" 48ff08 0x0 (seq (set _op (loadw 0 64 (+ (var rax) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rax) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rax+0x20]" 48ff4820 0x0 (seq (set _op (loadw 0 64 (+ (var rax) (bv 64 0x20)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rax) (bv 64 0x20)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rax-0x8]" 48ff48f8 0x0 (seq (set _op (loadw 0 64 (+ (var rax) (bv 64 0xfffffffffffffff8)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rax) (bv 64 0xfffffffffffffff8)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rbp+0xb0]" 48ff8db0000000 0x0 (seq (set _op (loadw 0 64 (+ (var rbp) (bv 64 0xb0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rbp) (bv 64 0xb0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rbx]" 48ff0b 0x0 (seq (set _op (loadw 0 64 (+ (var rbx) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rbx) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rbx+0x138]" 48ff8b38010000 0x0 (seq (set _op (loadw 0 64 (+ (var rbx) (bv 64 0x138)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rbx) (bv 64 0x138)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rcx]" 48ff09 0x0 (seq (set _op (loadw 0 64 (+ (var rcx) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rcx) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rcx+0x8]" 48ff4908 0x0 (seq (set _op (loadw 0 64 (+ (var rcx) (bv 64 0x8)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rcx) (bv 64 0x8)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rdi]" 48ff0f 0x0 (seq (set _op (loadw 0 64 (+ (var rdi) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rdi) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rdi+0x10]" 48ff4f10 0x0 (seq (set _op (loadw 0 64 (+ (var rdi) (bv 64 0x10)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rdi) (bv 64 0x10)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rdi+rax*1+0xe1]" 48ff8c07e1000000 0x0 (seq (set _op (loadw 0 64 (+ (+ (var rdi) (* (var rax) (bv 64 0x1))) (bv 64 0xe1)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (+ (var rdi) (* (var rax) (bv 64 0x1))) (bv 64 0xe1)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rdx]" 48ff0a 0x0 (seq (set _op (loadw 0 64 (+ (var rdx) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rdx) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rdx+0x10]" 48ff4a10 0x0 (seq (set _op (loadw 0 64 (+ (var rdx) (bv 64 0x10)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rdx) (bv 64 0x10)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rip+0x2121a1]" 48ff0da1212100 0x0 (seq (set _op (loadw 0 64 (+ (bv 64 0x0) (bv 64 0x2121a1)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (bv 64 0x0) (bv 64 0x2121a1)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rsi]" 48ff0e 0x0 (seq (set _op (loadw 0 64 (+ (var rsi) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rsi) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rsp]" 48ff0c24 0x0 (seq (set _op (loadw 0 64 (+ (var rsp) (bv 64 0x0)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rsp) (bv 64 0x0)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec QWORD PTR [rsp+0x1b8]" 48ff8c24b8010000 0x0 (seq (set _op (loadw 0 64 (+ (var rsp) (bv 64 0x1b8)))) (set _dec (- (var _op) (bv 64 0x1))) (storew 0 (+ (var rsp) (bv 64 0x1b8)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r10" 49ffca 0x0 (seq (set _op (var r10)) (set _dec (- (var _op) (bv 64 0x1))) (set r10 (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r10d" 41ffca 0x0 (seq (set _op (cast 32 false (var r10))) (set _dec (- (var _op) (bv 32 0x1))) (set r10 (| (& (var r10) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r11" 49ffcb 0x0 (seq (set _op (var r11)) (set _dec (- (var _op) (bv 64 0x1))) (set r11 (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r11d" 41ffcb 0x0 (seq (set _op (cast 32 false (var r11))) (set _dec (- (var _op) (bv 32 0x1))) (set r11 (| (& (var r11) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r12" 49ffcc 0x0 (seq (set _op (var r12)) (set _dec (- (var _op) (bv 64 0x1))) (set r12 (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r12d" 41ffcc 0x0 (seq (set _op (cast 32 false (var r12))) (set _dec (- (var _op) (bv 32 0x1))) (set r12 (| (& (var r12) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r13" 49ffcd 0x0 (seq (set _op (var r13)) (set _dec (- (var _op) (bv 64 0x1))) (set r13 (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r13d" 41ffcd 0x0 (seq (set _op (cast 32 false (var r13))) (set _dec (- (var _op) (bv 32 0x1))) (set r13 (| (& (var r13) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r14" 49ffce 0x0 (seq (set _op (var r14)) (set _dec (- (var _op) (bv 64 0x1))) (set r14 (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r14d" 41ffce 0x0 (seq (set _op (cast 32 false (var r14))) (set _dec (- (var _op) (bv 32 0x1))) (set r14 (| (& (var r14) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r15" 49ffcf 0x0 (seq (set _op (var r15)) (set _dec (- (var _op) (bv 64 0x1))) (set r15 (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r15d" 41ffcf 0x0 (seq (set _op (cast 32 false (var r15))) (set _dec (- (var _op) (bv 32 0x1))) (set r15 (| (& (var r15) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r8" 49ffc8 0x0 (seq (set _op (var r8)) (set _dec (- (var _op) (bv 64 0x1))) (set r8 (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r8d" 41ffc8 0x0 (seq (set _op (cast 32 false (var r8))) (set _dec (- (var _op) (bv 32 0x1))) (set r8 (| (& (var r8) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r9" 49ffc9 0x0 (seq (set _op (var r9)) (set _dec (- (var _op) (bv 64 0x1))) (set r9 (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec r9d" 41ffc9 0x0 (seq (set _op (cast 32 false (var r9))) (set _dec (- (var _op) (bv 32 0x1))) (set r9 (| (& (var r9) (~ (bv 64 0xffffffff))) (cast 64 false (var _dec)))) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 32 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec rax" 48ffc8 0x0 (seq (set _op (var rax)) (set _dec (- (var _op) (bv 64 0x1))) (set rax (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec rbp" 48ffcd 0x0 (seq (set _op (var rbp)) (set _dec (- (var _op) (bv 64 0x1))) (set rbp (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec rbx" 48ffcb 0x0 (seq (set _op (var rbx)) (set _dec (- (var _op) (bv 64 0x1))) (set rbx (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec rcx" 48ffc9 0x0 (seq (set _op (var rcx)) (set _dec (- (var _op) (bv 64 0x1))) (set rcx (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec rdi" 48ffcf 0x0 (seq (set _op (var rdi)) (set _dec (- (var _op) (bv 64 0x1))) (set rdi (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec rdx" 48ffca 0x0 (seq (set _op (var rdx)) (set _dec (- (var _op) (bv 64 0x1))) (set rdx (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec rsi" 48ffce 0x0 (seq (set _op (var rsi)) (set _dec (- (var _op) (bv 64 0x1))) (set rsi (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 64 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "dec WORD PTR [rdi+0x88]" 66ff8f88000000 0x0 (seq (set _op (loadw 0 16 (+ (var rdi) (bv 64 0x88)))) (set _dec (- (var _op) (bv 16 0x1))) (storew 0 (+ (var rdi) (bv 64 0x88)) (var _dec)) (set _result (var _dec)) (set _popcnt (bv 8 0x0)) (set _val (cast 8 false (var _result))) (repeat (! (is_zero (var _val))) (seq (set _popcnt (+ (var _popcnt) (ite (lsb (var _val)) (bv 8 0x1) (bv 8 0x0)))) (set _val (>> (var _val) (bv 8 0x1) false)))) (set pf (is_zero (mod (var _popcnt) (bv 8 0x2)))) (set zf (is_zero (var _result))) (set sf (msb (var _result))) (set _result (var _dec)) (set _x (var _op)) (set _y (bv 16 0x1)) (set of (|| (&& (&& (! (msb (var _result))) (msb (var _x))) (! (msb (var _y)))) (&& (&& (msb (var _result)) (! (msb (var _x)))) (msb (var _y))))) (set af (|| (|| (&& (! (msb (cast 4 false (var _x)))) (msb (cast 4 false (var _y)))) (&& (msb (cast 4 false (var _y))) (msb (cast 4 false (var _result))))) (&& (msb (cast 4 false (var _result))) (! (msb (cast 4 false (var _x))))))))
a "bswap rax" 480fc8
a "bswap r15" 490fcf
a "bswap eax" 0fc8
a "bswap r15d" 410fcf
ad "endbr64" f30f1efa
d "enter 8, 0" c8080000 0x0 (seq (set _alloc_sz (cast 16 false (bv 64 0x8))) (set _nest_lvl (mod (cast 8 false (bv 64 0x0)) (bv 8 0x20))) (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var rbp))) (set _frame_tmp (var rsp)) (branch (is_zero (var _nest_lvl)) nop (seq (branch (! (ule (var _nest_lvl) (bv 8 0x1))) (seq (set _itr (bv 8 0x1)) (repeat (&& (ule (var _itr) (var _nest_lvl)) (! (== (var _itr) (var _nest_lvl)))) (seq (set rbp (- (var rbp) (bv 64 0x8))) (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (loadw 0 64 (var rbp)))) (set _itr (+ (var _itr) (bv 8 0x1)))))) nop) (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var _frame_tmp))))) (set rsp (- (var rsp) (cast 64 false (var _alloc_sz)))) (set rbp (var _frame_tmp)))
d "enter 8, 0" 66c8080000 0x0 (seq (set _alloc_sz (cast 16 false (bv 32 0x8))) (set _nest_lvl (mod (cast 8 false (bv 32 0x0)) (bv 8 0x20))) (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (cast 32 false (var rbp)))) (set _frame_tmp (var rsp)) (branch (is_zero (var _nest_lvl)) nop (seq (branch (! (ule (var _nest_lvl) (bv 8 0x1))) (seq (set _itr (bv 8 0x1)) (repeat (&& (ule (var _itr) (var _nest_lvl)) (! (== (var _itr) (var _nest_lvl)))) (seq (set rbp (- (var rbp) (bv 64 0x4))) (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (loadw 0 32 (var rbp)))) (set _itr (+ (var _itr) (bv 8 0x1)))))) nop) (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 64 false (var _frame_tmp))))) (set rsp (- (var rsp) (cast 64 false (var _alloc_sz)))) (set rbp (| (& (var rbp) (~ (bv 64 0xffffffff))) (cast 64 false (var _frame_tmp)))))
ad "xchg eax, r8d" 4190 0x0 (seq (set _temp (cast 32 false (var rax))) (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (cast 32 false (var r8))))) (set r8 (| (& (var r8) (~ (bv 64 0xffffffff))) (cast 64 false (var _temp)))))
a "xchg r8d, eax" 4190 0x0 (seq (set _temp (cast 32 false (var rax))) (set rax (| (& (var rax) (~ (bv 64 0xffffffff))) (cast 64 false (cast 32 false (var r8))))) (set r8 (| (& (var r8) (~ (bv 64 0xffffffff))) (cast 64 false (var _temp)))))
ad "xchg rax, rdx" 4892 0x0 (seq (set _temp (var rax)) (set rax (var rdx)) (set rdx (var _temp)))
a "xchg rdx, rax" 4892 0x0 (seq (set _temp (var rax)) (set rax (var rdx)) (set rdx (var _temp)))
ad "xchg rax, r8" 4990 0x0 (seq (set _temp (var rax)) (set rax (var r8)) (set r8 (var _temp)))
a "xchg r8, rax" 4990 0x0 (seq (set _temp (var rax)) (set rax (var r8)) (set r8 (var _temp)))
ad "xchg rdx, rbx" 4887da 0x0 (seq (set _temp (var rdx)) (set rdx (var rbx)) (set rbx (var _temp)))
ad "xchg rbx, rdx" 4887d3 0x0 (seq (set _temp (var rbx)) (set rbx (var rdx)) (set rdx (var _temp)))
ad "xchg r8, r15" 4d87f8 0x0 (seq (set _temp (var r8)) (set r8 (var r15)) (set r15 (var _temp)))
ad "xchg r15, r8" 4d87c7 0x0 (seq (set _temp (var r15)) (set r15 (var r8)) (set r8 (var _temp)))
ad "xchg r8d, r15d" 4587f8 0x0 (seq (set _temp (cast 32 false (var r8))) (set r8 (| (& (var r8) (~ (bv 64 0xffffffff))) (cast 64 false (cast 32 false (var r15))))) (set r15 (| (& (var r15) (~ (bv 64 0xffffffff))) (cast 64 false (var _temp)))))
ad "xchg r15d, r8d" 4587c7 0x0 (seq (set _temp (cast 32 false (var r15))) (set r15 (| (& (var r15) (~ (bv 64 0xffffffff))) (cast 64 false (cast 32 false (var r8))))) (set r8 (| (& (var r8) (~ (bv 64 0xffffffff))) (cast 64 false (var _temp)))))
ad "xchg rdx, r8" 4c87c2 0x0 (seq (set _temp (var rdx)) (set rdx (var r8)) (set r8 (var _temp)))
ad "xchg r15, rdx" 4987d7 0x0 (seq (set _temp (var r15)) (set r15 (var rdx)) (set rdx (var _temp)))
d "call qword [rip + 0x3a8f3e]" 48ff153e8f3a00 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
d "call qword [rip + 0x1d638f]" 48ff158f631d00 0x0 (seq (set rsp (- (var rsp) (bv 64 0x8))) (storew 0 (+ (var rsp) (bv 64 0x0)) (cast 16 false (bv 64 0x0))))
a "fmul st2, st0" dcca
a "fdiv st0, st1" d8f1
a "fdiv st(0), st(1)" d8f1
a "fdiv st0, st7" d8f7
a "fdiv st(0), st(7)" d8f7
a "fcmove st0, st1" dac9
a "fcmovbe st0, st1" dad1
a "fcmovu st0, st1" dad9
a "fcmovnb st0, st1" dbc1
a "fcmovne st0, st1" dbc9
a "fcmovnbe st0, st1" dbd1
a "fcmovnu st0, st1" dbd9
a "ffree st0" ddc0
a "ffree st(7)" ddc7
a "frstor [eax]" dd20
a "fxch" d9c9
a "fxch st2" d9ca
a "fucom" dde1
a "fucom st(2)" dde2
a "fucomp" dde9
a "fucomp st(2)" ddea
a "faddp" dec1
a "faddp st2, st0" dec2
a "fiadd word [rax]" de00
a "fiadd dword [rax]" da00
a "fadd dword [rax]" d800
a "fadd qword [rax]" dc00
a "ficom word [rax]" de10
a "ficom dword [rax]" da10
a "ficomp word [rax]" de18
a "ficomp dword [rax]" da18
a "fild word [rax]" df00
a "fild dword [rax]" db00
a "fild qword [rax]" df28
a "fldcw word [rax]" d928
a "fldenv [rax]" d920
a "fbld tbyte [rax]" df20
a "fbstp tbyte [rax]" df30
a "fxrstor [rax]" 0fae08
a "fxsave [rax]" 0fae00
a "fist word [rax]" df10
a "fist dword [rax]" db10
a "fistp word [rax]" df18
a "fistp dword [rax]" db18
a "fistp qword [rax]" df38
a "fisttp word [rax]" df08
a "fisttp dword [rax]" db08
a "fisttp qword [rax]" dd08
a "fstenv [rcx]" 9bd931
a "fnstenv [rcx]" d931
a "fdiv dword[rax]" d830
a "fdiv qword [rax]" dc30
a "fdiv st0, st7" d8f7
a "fdiv st6, st0" dcfe
a "fdivp" def9
a "fdivp st2, st0" defa
a "fidiv word [rax]" de30
a "fidiv dword [rax]" da30
a "fdivr dword[rax]" d838
a "fdivr qword [rax]" dc38
a "fdivr st0, st7" d8ff
a "fdivr st6, st0" dcf6
a "fdivrp" def1
a "fdivrp st2, st0" def2
a "fidivr word [rax]" de38
a "fidivr dword [rax]" da38
a "fmul dword[rax]" d808
a "fmul qword [rax]" dc08
a "fmul st0, st7" d8cf
a "fmul st6, st0" dcce
a "fmulp" dec9
a "fmulp st2, st0" deca
a "fimul word [rax]" de08
a "fimul dword [rax]" da08
a "fsub dword[rax]" d820
a "fsub qword [rax]" dc20
a "fsub st0, st7" d8e7
a "fsub st6, st0" dcee
a "fsubp" dee9
a "fsubp st2, st0" deea
a "fisub word [rax]" de20
a "fisub dword [rax]" da20
a "fsubr dword[rax]" d828
a "fsubr qword [rax]" dc28
a "fsubr st0, st7" d8ef
a "fsubr st6, st0" dce6
a "fsubrp" dee1
a "fsubrp st2, st0" dee2
a "fisubr word [rax]" de28
a "fisubr dword [rax]" da28
a "fstcw word [rcx]" 9bd939
a "fnstcw word [rcx]" d939
a "fstsw word [rcx]" 9bdd39
a "fnstsw word [rcx]" dd39
a "fstsw ax" 9bdfe0
a "fnstsw ax" dfe0
a "fsave dword [rax]" 9bdd30
a "fnsave dword [rax]" dd30
aB "fnsave dword [rdi + rdi*8]" dd34ff
