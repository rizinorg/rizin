NAME=mips ensure correct cpu is selected
FILE=bins/elf/analysis/mips-hello
CMDS=<<EOF
iI~cpu
iI~pie
iI~features
aaa
pdf @ entry0
pdf @ main
ao~0x @ 0x000804fc
EOF
EXPECT=<<EOF
cpu      mips32
PIE      true
features noreorder pic cpic o32 n32
            ; UNKNOWN XREF from aav.0x00080002 @ +0x16
            ; UNKNOWN XREF from section..dynsym @ +0x74
            ;-- section..text:
            ;-- _ftext:
            ;-- .text:
            ;-- __start:
            ;-- _start:
            ;-- pc:
/ entry0();
|           ; var int32_t var_4h @ stack - 0x4
|           0x000804d0      bal   0x804d8                              ; [06] -r-x section size 304 named .text ;  entry0(void)
|           0x000804d4      nop
|           ; CALL XREF from entry0 @ 0x804d0
|           0x000804d8      lui   gp, 2
|           0x000804dc      addiu gp, gp, -0x74d8
|           0x000804e0      addu  gp, gp, ra
|           0x000804e4      move  a0, sp
|           0x000804e8      addiu sp, sp, -0x20
|           0x000804ec      sw    zero, (var_4h)
|           0x000804f0      lw    t9, -sym.do_mips_start(gp)           ; [data.00091018:4]=0x8051c sym.do_mips_start
|           0x000804f4      jalr  t9
|           0x000804f8      nop
|       @-> 0x000804fc      b     0x804fc
\           0x00080500      nop
            ; UNKNOWN XREF from section..dynsym @ +0xb4
            ; DATA XREF from sym.do_mips_start @ 0x80544
/ int main(int argc, char **argv, char **envp);
|           ; arg int argc @ a0
|           ; var int32_t var_10h @ stack - 0x10
|           ; var int32_t var_8h @ stack - 0x8
|           ; var int32_t var_4h @ stack - 0x4
|           ; arg int32_t arg_10h @ stack + 0x10
|           0x000805a0      lui   gp, 2
|           0x000805a4      addiu gp, gp, -0x75a0
|           0x000805a8      addu  gp, gp, t9
|           0x000805ac      addiu sp, sp, -0x20
|           0x000805b0      sw    ra, (var_4h)
|           0x000805b4      sw    fp, (var_8h)
|           0x000805b8      move  fp, sp
|           0x000805bc      sw    gp, (var_10h)
|           0x000805c0      lw    v0, -segment.LOAD0(gp)               ; [data.0009103c:4]=0x80000 segment.ehdr
|           0x000805c4      addiu a0, v0, 0x640                        ; 0x80640 ; "Hello World" ; argc ; str.Hello_World
|           0x000805c8      lw    v0, -sym._MIPS_STUBS(gp)             ; [data.00091048:4]=0x80600 sym.imp.puts
|           0x000805cc      move  t9, v0
|           0x000805d0      jalr  t9
|           0x000805d4      nop
|           0x000805d8      lw    gp, (arg_10h)
|           0x000805dc      move  sp, fp
|           0x000805e0      lw    ra, (var_4h)
|           0x000805e4      lw    fp, (var_8h)
|           0x000805e8      addiu sp, sp, 0x20
|           0x000805ec      jr    ra
\           0x000805f0      nop
address: 0x804fc
opcode: b 0x804fc
disasm: b 0x804fc
pseudo: goto 0x804fc
jump: 0x000804fc
EOF
RUN
