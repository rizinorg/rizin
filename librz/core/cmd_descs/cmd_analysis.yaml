# SPDX-FileCopyrightText: 2021 RizinOrg <info@rizin.re>
# SPDX-License-Identifier: LGPL-3.0-only
---
name: cmd_analysis
commands:
  - name: af
    summary: Analyze Functions commands
    cname: cmd_analysis_fcn
    type: RZ_CMD_DESC_TYPE_OLDINPUT
    subcommands:
      - name: afb
        summary: Basic blocks commands
        subcommands:
          - name: afb
            summary: List basic blocks of function
            type: RZ_CMD_DESC_TYPE_ARGV_STATE
            cname: analysis_function_blocks_list
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_RIZIN
              - RZ_OUTPUT_MODE_JSON
              - RZ_OUTPUT_MODE_QUIET
              - RZ_OUTPUT_MODE_TABLE
            args:
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
                optional: true
          - name: afb+
            summary: Add basic block by hand
            cname: analysis_function_blocks_add
            args:
              - name: fcn_addr
                type: RZ_CMD_ARG_TYPE_RZNUM
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
              - name: size
                type: RZ_CMD_ARG_TYPE_RZNUM
              - name: jump
                type: RZ_CMD_ARG_TYPE_RZNUM
                optional: true
              - name: fail
                type: RZ_CMD_ARG_TYPE_RZNUM
                optional: true
              - name: diff
                type: RZ_CMD_ARG_TYPE_CHOICES
                optional: true
                choices: ["m", "u"]
          - name: afb-
            summary: Remove basic block from function
            cname: analysis_function_blocks_del
            args:
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
                optional: true
          - name: afb-*
            summary: Remove all basic blocks from function
            cname: analysis_function_blocks_del_all
            args:
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
                optional: true
          - name: afbe
            summary: Add basic-block edge for switch-cases
            cname: analysis_function_blocks_edge
            args:
              - name: switch_addr
                type: RZ_CMD_ARG_TYPE_RZNUM
              - name: case_addr
                type: RZ_CMD_ARG_TYPE_RZNUM
          - name: afbr
            summary: Show addresses of instructions which leave the function
            cname: analysis_function_returns
            args:
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
                optional: true
          - name: afb=
            summary: Display ascii-art bars for basic block regions
            cname: analysis_function_blocks_asciiart
            args:
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
                optional: true
          - name: afbi
            summary: Print single basic block information
            cname: analysis_function_blocks_info
            type: RZ_CMD_DESC_TYPE_ARGV_STATE
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_LONG
              - RZ_OUTPUT_MODE_RIZIN
              - RZ_OUTPUT_MODE_JSON
              - RZ_OUTPUT_MODE_QUIET
              - RZ_OUTPUT_MODE_TABLE
            args:
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
                optional: true
          - name: afbc
            summary: Set a color for the basic block at a given address
            cname: analysis_function_blocks_color
            args:
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
              - name: color
                type: RZ_CMD_ARG_TYPE_RZNUM
      - name: afB
        cname: analysis_function_setbits
        summary: Set asm.bits for the current function
        args:
          - name: bits
            type: RZ_CMD_ARG_TYPE_NUM
      - name: afs
        summary: Function signatures commands
        subcommands:
          - name: afs
            cname: analysis_function_signature
            summary: Get/Set function signature at current address
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_JSON
            args:
              - name: signature
                type: RZ_CMD_ARG_TYPE_STRING
                optional: true
          - name: afs!
            cname: analysis_function_signature_editor
            summary: Set function signature at current address by using the editor
            args: []
          - name: afsr
            cname: analysis_function_signature_type
            summary: Change type for current function
            args:
              - name: type
                type: RZ_CMD_ARG_TYPE_STRING
      - name: afo
        cname: analysis_function_address
        summary: Show address of current function
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
        args: []
      - name: afu
        cname: analysis_function_until
        summary: Resize and analyze function from current address until addr
        args:
          - name: addr
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: afx
        cname: analysis_function_xrefs
        summary: List function references
        type: RZ_CMD_DESC_TYPE_ARGV_STATE
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
        args: []
      - name: afS
        cname: analysis_function_stacksz
        summary: Set stack frame size for function at current address
        args:
          - name: size
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: afv
        summary: Manipulate arguments/variables in a function
        subcommands:
          - name: afv
            cname: analysis_function_vars
            summary: List all variables and arguments of the current function
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_JSON
              - RZ_OUTPUT_MODE_RIZIN
            args: []
          - name: afv=
            cname: analysis_function_vars_dis_refs
            summary: List function variables and arguments with disasm refs
            args: []
          - name: afv-
            cname: analysis_function_vars_del
            summary: Remove all variables/arguments or just the specified one
            args:
              - name: varname|*
                type: RZ_CMD_ARG_TYPE_FCN_VAR
          - name: afva
            cname: analysis_function_vars_detect
            summary: Analyze function arguments/locals
            args: []
          - name: afvd
            cname: analysis_function_vars_display
            summary: Display the value of arguments/variables
            args:
              - name: varname
                type: RZ_CMD_ARG_TYPE_FCN_VAR
                optional: true
          - name: afvf
            cname: analysis_function_vars_stackframe
            summary: Show BP relative stackframe variables
            args: []
          - name: afvn
            cname: analysis_function_vars_rename
            summary: Rename argument/variable in current function
            args:
              - name: new_name
                type: RZ_CMD_ARG_TYPE_STRING
              - name: old_name
                type: RZ_CMD_ARG_TYPE_FCN_VAR
                optional: true
          - name: afvR
            cname: analysis_function_vars_reads
            summary: List addresses where vars are accessed (READ)
            args:
              - name: varname
                type: RZ_CMD_ARG_TYPE_FCN_VAR
                optional: true
          - name: afvW
            cname: analysis_function_vars_writes
            summary: List addresses where vars are accessed (WRITE)
            args:
              - name: varname
                type: RZ_CMD_ARG_TYPE_FCN_VAR
                optional: true
          - name: afvt
            cname: analysis_function_vars_type
            summary: Change type for given argument/local
            args:
              - name: varname
                type: RZ_CMD_ARG_TYPE_FCN_VAR
              - name: type
                type: RZ_CMD_ARG_TYPE_STRING
          - name: afvx
            summary: Show argument/variable xrefs in a function
            subcommands:
              - name: afvx
                cname: analysis_function_vars_xrefs
                summary: Show function variable xrefs (same as afvR+afvW)
                modes:
                  - RZ_OUTPUT_MODE_STANDARD
                  - RZ_OUTPUT_MODE_JSON
                args:
                  - name: varname
                    type: RZ_CMD_ARG_TYPE_FCN_VAR
                    optional: true
              - name: afvxa
                cname: analysis_function_vars_xrefs_args
                summary: Show function argument xrefs
                modes:
                  - RZ_OUTPUT_MODE_STANDARD
                  - RZ_OUTPUT_MODE_JSON
                args:
                  - name: varname
                    type: RZ_CMD_ARG_TYPE_FCN_VAR
                    optional: true
              - name: afvxv
                cname: analysis_function_vars_xrefs_vars
                summary: Show function local variable xrefs
                modes:
                  - RZ_OUTPUT_MODE_STANDARD
                  - RZ_OUTPUT_MODE_JSON
                args:
                  - name: varname
                    type: RZ_CMD_ARG_TYPE_FCN_VAR
                    optional: true
          - name: afvb
            summary: Manipulate BP based arguments/locals
            subcommands:
              - name: afvb
                cname: analysis_function_vars_bp
                summary: List base pointer based arguments and locals / Define a new one
                modes:
                  - RZ_OUTPUT_MODE_STANDARD
                  - RZ_OUTPUT_MODE_RIZIN
                  - RZ_OUTPUT_MODE_JSON
                args:
                  - name: delta
                    type: RZ_CMD_ARG_TYPE_RZNUM
                    optional: true
                  - name: name
                    type: RZ_CMD_ARG_TYPE_STRING
                  - name: type
                    type: RZ_CMD_ARG_TYPE_STRING
                    optional: true
              - name: afvb-
                cname: analysis_function_vars_bp_del
                summary: Delete argument/local with the given name
                args:
                  - name: varname
                    type: RZ_CMD_ARG_TYPE_FCN_VAR
              - name: afvb-*
                cname: analysis_function_vars_bp_del_all
                summary: Delete all arguments/locals
                args: []
              - name: afvbg
                cname: analysis_function_vars_bp_getref
                summary: Define var get reference
                args:
                  - name: delta
                    type: RZ_CMD_ARG_TYPE_RZNUM
                  - name: addr
                    type: RZ_CMD_ARG_TYPE_RZNUM
              - name: afvbs
                cname: analysis_function_vars_bp_setref
                summary: Define var set reference
                args:
                  - name: delta
                    type: RZ_CMD_ARG_TYPE_RZNUM
                  - name: addr
                    type: RZ_CMD_ARG_TYPE_RZNUM
          - name: afvr
            summary: Manipulate register-based arguments/locals
            subcommands:
              - name: afvr
                cname: analysis_function_vars_regs
                summary: List register-based arguments and locals / Define a new one
                modes:
                  - RZ_OUTPUT_MODE_STANDARD
                  - RZ_OUTPUT_MODE_RIZIN
                  - RZ_OUTPUT_MODE_JSON
                args:
                  - name: reg
                    type: RZ_CMD_ARG_TYPE_STRING
                    optional: true
                  - name: name
                    type: RZ_CMD_ARG_TYPE_STRING
                  - name: type
                    type: RZ_CMD_ARG_TYPE_STRING
                    optional: true
              - name: afvr-
                cname: analysis_function_vars_regs_del
                summary: Delete register-based argument/local with the given name
                args:
                  - name: varname
                    type: RZ_CMD_ARG_TYPE_FCN_VAR
              - name: afvr-*
                cname: analysis_function_vars_regs_del_all
                summary: Delete all register-based arguments/locals
                args: []
              - name: afvrg
                cname: analysis_function_vars_regs_getref
                summary: Define register-based arguments and locals get references
                args:
                  - name: reg
                    type: RZ_CMD_ARG_TYPE_STRING
                  - name: addr
                    type: RZ_CMD_ARG_TYPE_RZNUM
              - name: afvrs
                cname: analysis_function_vars_regs_setref
                summary: Define register-based arguments and locals set references
                args:
                  - name: reg
                    type: RZ_CMD_ARG_TYPE_STRING
                  - name: addr
                    type: RZ_CMD_ARG_TYPE_RZNUM
          - name: afvs
            summary: Manipulate SP based arguments/locals
            subcommands:
              - name: afvs
                cname: analysis_function_vars_sp
                summary: List stack based arguments and locals / Define a new one
                modes:
                  - RZ_OUTPUT_MODE_STANDARD
                  - RZ_OUTPUT_MODE_RIZIN
                  - RZ_OUTPUT_MODE_JSON
                args:
                  - name: delta
                    type: RZ_CMD_ARG_TYPE_RZNUM
                    optional: true
                  - name: name
                    type: RZ_CMD_ARG_TYPE_STRING
                  - name: type
                    type: RZ_CMD_ARG_TYPE_STRING
                    optional: true
              - name: afvs-
                cname: analysis_function_vars_sp_del
                summary: Delete argument/local with the given name
                args:
                  - name: varname
                    type: RZ_CMD_ARG_TYPE_FCN_VAR
              - name: afvsg
                cname: analysis_function_vars_sp_getref
                summary: Define var get reference
                args:
                  - name: delta
                    type: RZ_CMD_ARG_TYPE_RZNUM
                  - name: addr
                    type: RZ_CMD_ARG_TYPE_RZNUM
              - name: afvss
                cname: analysis_function_vars_sp_setref
                summary: Define var set reference
                args:
                  - name: delta
                    type: RZ_CMD_ARG_TYPE_RZNUM
                  - name: addr
                    type: RZ_CMD_ARG_TYPE_RZNUM
      - name: afl
        summary: List functions
        subcommands:
          - name: afl
            summary: List all functions
            cname: analysis_function_list
            type: RZ_CMD_DESC_TYPE_ARGV_STATE
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_LONG
              - RZ_OUTPUT_MODE_JSON
              - RZ_OUTPUT_MODE_QUIET
              - RZ_OUTPUT_MODE_RIZIN
              - RZ_OUTPUT_MODE_TABLE
            args: []
          - name: afl.
            summary: List functions in current seek
            cname: analysis_function_list_in
            args: []
          - name: aflc
            summary: Display count of all functions
            cname: analysis_function_count
            args: []
          - name: afl+
            summary: Display sum of all functions sizes
            cname: analysis_function_size_sum
            args: []
          - name: aflm
            summary: List calls of all functions
            cname: analysis_function_list_calls
            type: RZ_CMD_DESC_TYPE_ARGV_STATE
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_JSON
              - RZ_OUTPUT_MODE_QUIET
            args: []
          - name: afl=
            summary: Display ascii-art bars with function ranges
            cname: analysis_function_list_ascii
            args: []
      - name: afi
        summary: Show/edit function information
        subcommands:
          - name: afi
            summary: Show information of functions in current seek
            cname: analysis_function_info
            type: RZ_CMD_DESC_TYPE_ARGV_STATE
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_JSON
              - RZ_OUTPUT_MODE_RIZIN
            args: []
          - name: afii
            summary: Show/add/delete imports used in function in current seek
            subcommands:
              - name: afii
                summary: Show/add imports used in function in current seek
                cname: analysis_function_import_list
                args:
                  - name: import
                    type: RZ_CMD_ARG_TYPE_STRING
                    optional: true
              - name: afii-
                summary: Delete imports used in function in current seek
                cname: analysis_function_import_list_del
                args: []
          - name: afis
            summary: Show opcode statistic in function
            subcommands:
              - name: afis
                summary: Enumerate unique opcodes/opcode families/opcode types in function
                cname: analysis_function_opcode_stat
                type: RZ_CMD_DESC_TYPE_ARGV_STATE
                modes:
                  - RZ_OUTPUT_MODE_STANDARD
                  - RZ_OUTPUT_MODE_TABLE
                args:
                  - name: mode
                    type: RZ_CMD_ARG_TYPE_CHOICES
                    optional: true
                    choices: ["family", "type"]
              - name: afisa
                summary: Enumerate unique opcodes/opcode families/opcode types in all functions
                cname: analysis_function_all_opcode_stat
                type: RZ_CMD_DESC_TYPE_ARGV_STATE
                modes:
                  - RZ_OUTPUT_MODE_TABLE
                args:
                  - name: mode
                    type: RZ_CMD_ARG_TYPE_CHOICES
                    optional: true
                    choices: ["family", "type"]
      - name: afn
        summary: Analyze function names
        subcommands:
          - name: afn
            summary: Rename function at current seek
            cname: analysis_function_rename
            args:
              - name: new name
                type: RZ_CMD_ARG_TYPE_STRING
          - name: afna
            summary: Suggest a name for the function in current seek
            cname: analysis_function_autoname
            args: []
          - name: afns
            summary: Print all strings referenced by the function in current seek
            cname: analysis_function_strings
            type: RZ_CMD_DESC_TYPE_ARGV_STATE
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_JSON
            args: []
  - name: aez
    summary: RzIL Emulation
    type: RZ_CMD_DESC_TYPE_GROUP
    subcommands:
      - name: aezi
        summary: Initialize the RzIL Virtual Machine at the current offset
        type: RZ_CMD_DESC_TYPE_ARGV
        cname: rzil_vm_initialize
        args: []
      - name: aezs
        summary: Step N instructions within the RzIL Virtual Machine
        type: RZ_CMD_DESC_TYPE_ARGV
        cname: rzil_vm_step
        args:
          - name: n_times
            type: RZ_CMD_ARG_TYPE_NUM
            optional: true
      - name: aezse
        summary: Step N instructions within the RzIL VM and output VM changes (read & write)
        type: RZ_CMD_DESC_TYPE_ARGV_MODES
        cname: rzil_vm_step_with_events
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
        args:
          - name: n_times
            type: RZ_CMD_ARG_TYPE_NUM
            optional: true
      - name: aezsu
        summary: Step until PC equals given address
        type: RZ_CMD_DESC_TYPE_ARGV
        cname: rzil_vm_step_until_addr
        args:
          - name: address
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: aezv
        summary: Print or modify the current status of the RzIL Virtual Machine
        cname: rzil_vm_status
        type: RZ_CMD_DESC_TYPE_ARGV_MODES
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_TABLE
          - RZ_OUTPUT_MODE_JSON
          - RZ_OUTPUT_MODE_QUIET
        args:
          - name: var_name
            type: RZ_CMD_ARG_TYPE_STRING
            optional: true
          - name: number
            type: RZ_CMD_ARG_TYPE_RZNUM
            optional: true
  #####################################################
  # Keep this in sync with dr in cmd_debug.yaml from here...
  - name: ar
    summary: Emulation Registers
    details:
      - name: Register Filter
        entries:
          - text: "ar"
            arg_str: ""
            comment: Show a sensible default selection of registers
          - text: "ar"
            arg_str: " rax"
            comment: Show a single register
          - text: "ar"
            arg_str: " 16"
            comment: Show 16 bits wide gpr registers
          - text: "ar"
            arg_str: " xmm"
            comment: Show registers of type xmm (see `arT` for possible types)
          - text: "ar"
            arg_str: " PC"
            comment: Show the register with the given role (see `arR` for possible roles)
          - text: "ar"
            arg_str: " all"
            comment: Show all registers available
    subcommands:
      - name: ar
        summary: Show registers with their values, or assign one (`ar reg=value`)
        type: RZ_CMD_DESC_TYPE_ARGV_STATE
        cname: analysis_regs
        args_str: " [<filter> [= <value>]]"
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_RIZIN
          - RZ_OUTPUT_MODE_TABLE
          - RZ_OUTPUT_MODE_JSON
          - RZ_OUTPUT_MODE_QUIET
        args:
          - name: filter
            type: RZ_CMD_ARG_TYPE_REG_FILTER
            flags: RZ_CMD_ARG_FLAG_LAST
            optional: true
      - name: ar=
        summary: Show registers in columns
        type: RZ_CMD_DESC_TYPE_ARGV
        cname: analysis_regs_columns
        args:
          - name: filter
            type: RZ_CMD_ARG_TYPE_REG_FILTER
            optional: true
      - name: arr
        summary: Show register references (telescoping)
        type: RZ_CMD_DESC_TYPE_ARGV_MODES
        cname: analysis_regs_references
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
        args:
          - name: filter
            type: RZ_CMD_ARG_TYPE_REG_FILTER
            optional: true
      - name: ari
        summary: Show register grouped by their values
        type: RZ_CMD_DESC_TYPE_ARGV
        cname: analysis_regs_valgroup
        args:
          - name: filter
            type: RZ_CMD_ARG_TYPE_REG_FILTER
            optional: true
      - name: arA
        summary: Show values of default function argument registers (A0, A1, A2, ...) with telescoping
        cname: analysis_regs_args
        type: RZ_CMD_DESC_TYPE_ARGV_MODES
        details: [] # Explicitly empty to not show parent ones
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
        args: []
      - name: arcc
        summary: Show calling convention defined by registers
        cname: analysis_reg_cc
        args: []
        details: [] # Explicitly empty to not show parent ones
      - name: ard
        summary: Show register differences from previous contents
        cname: analysis_regs_diff
        args: []
        details: [] # Explicitly empty to not show parent ones
      - name: aro
        summary: Show previous register contents
        cname: analysis_regs_prev
        type: RZ_CMD_DESC_TYPE_ARGV_STATE
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_RIZIN
          - RZ_OUTPUT_MODE_TABLE
          - RZ_OUTPUT_MODE_JSON
          - RZ_OUTPUT_MODE_QUIET
        args:
          - name: filter
            type: RZ_CMD_ARG_TYPE_REG_FILTER
            flags: RZ_CMD_ARG_FLAG_LAST
            optional: true
      - name: arF
        summary: Show fpu registers
        type: RZ_CMD_DESC_TYPE_ARGV
        cname: analysis_regs_fpu
        args_str: " [<register> [= <value>]]"
        args:
          - name: reg
            type: RZ_CMD_ARG_TYPE_STRING
            flags: RZ_CMD_ARG_FLAG_LAST
            optional: true
      - name: arf
        summary: Show commands for setting registers as flags
        subcommands:
          - name: arf
            summary: Show commands for setting registers as flags
            cname: analysis_reg_flags
            args:
              - name: filter
                type: RZ_CMD_ARG_TYPE_REG_FILTER
                optional: true
          - name: arf-
            summary: Show commands for unsetting flags from `arf`
            cname: analysis_reg_flags_unset
            args:
              - name: filter
                type: RZ_CMD_ARG_TYPE_REG_FILTER
                optional: true
      - name: ara
        summary: Register arena commands (underlying binary data)
        details: [] # Explicitly empty to not show parent ones
        subcommands:
          - name: ara
            summary: Show all currently allocated register arenas
            cname: analysis_reg_arenas
            args: []
          - name: ara+
            summary: Push a new set of arenas to the stack
            cname: analysis_reg_arenas_push
            args: []
          - name: ara-
            summary: Pop a set of arenas from the stack
            cname: analysis_reg_arenas_pop
            args: []
          - name: araS
            summary: Show number of stack elements
            cname: analysis_reg_arenas_stack_size
            args: []
          - name: aras
            summary: Swap last two register arenas on the stack
            cname: analysis_reg_arenas_swap
            args: []
          - name: ara0
            summary: Reset the specified or all arena contents to 0
            cname: analysis_reg_arenas_zero
            args:
              - name: type
                type: RZ_CMD_ARG_TYPE_REG_TYPE
                optional: true
          - name: arab
            summary: Display hexdump of given arena (or gpr if none given)
            cname: analysis_reg_arenas_hexdump
            args:
              - name: type
                type: RZ_CMD_ARG_TYPE_REG_TYPE
                optional: true
          - name: araw
            summary: Write hexadecimal data <hex> into the given arena (or gpr if none given)
            cname: analysis_reg_arenas_write_hex
            args:
              - name: hex
                type: RZ_CMD_ARG_TYPE_STRING
              - name: type
                type: RZ_CMD_ARG_TYPE_REG_TYPE
                optional: true
      - name: arp
        summary: Register profile commands (defining available registers)
        details: [] # Explicitly empty to not show parent ones
        subcommands:
          - name: arp
            summary: Show the current register profile
            cname: analysis_reg_profile
            args: []
            type: RZ_CMD_DESC_TYPE_ARGV_STATE
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_JSON
          - name: arpc
            summary: Show register profile comments
            cname: analysis_reg_profile_comments
            args: []
          - name: arpo
            summary: Load a new register profile from file
            cname: analysis_reg_profile_open
            args:
              - name: file
                type: RZ_CMD_ARG_TYPE_FILE
          - name: arpg
            summary: Convert gdb profile from the given file to rizin register profile
            cname: analysis_reg_profile_gdb
            args:
              - name: file
                type: RZ_CMD_ARG_TYPE_FILE
      - name: arc
        summary: Conditional flags (aliases to processor flags)
        cname: analysis_reg_cond
        args: []
        details:
          - name: Basic
            entries:
              - text: eq
                arg_str: ""
                comment: equal
              - text: ne
                arg_str: ""
                comment: not equal
              - text: cf
                arg_str: ""
                comment: carry flag set
              - text: neg
                arg_str: ""
                comment: negative value (has sign)
              - text: of
                arg_str: ""
                comment: overflow
          - name: Unsigned
            entries:
              - text: hi
                arg_str: ""
                comment: higher
              - text: he
                arg_str: ""
                comment: higher or equal
              - text: lo
                arg_str: ""
                comment: lower
              - text: loe
                arg_str: ""
                comment: lower or equal
          - name: Signed
            entries:
              - text: gt
                arg_str: ""
                comment: greater
              - text: ge
                arg_str: ""
                comment: greater or equal
              - text: lt
                arg_str: ""
                comment: less
              - text: le
                arg_str: ""
                comment: less or equal
      - name: arT
        summary: List all register types
        cname: analysis_reg_types
        details: [] # Explicitly empty to not show parent ones
        args: []
      - name: arR
        summary: List all register roles
        cname: analysis_reg_roles
        details: [] # Explicitly empty to not show parent ones
        args: []
  # ... to here
  #####################################################
  - name: av
    summary: C++ vtables and RTTI
    subcommands:
      - name: av
        summary: search for vtables in data sections and show results
        type: RZ_CMD_DESC_TYPE_ARGV_MODES
        cname: analysis_list_vtables
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_RIZIN
          - RZ_OUTPUT_MODE_JSON
        args: []
      - name: avg
        summary: Global variables
        subcommands:
          - name: avg
            summary: show global variables
            type: RZ_CMD_DESC_TYPE_ARGV_STATE
            cname: analysis_print_global_variable
            modes:
              - RZ_OUTPUT_MODE_STANDARD
              - RZ_OUTPUT_MODE_JSON
            args:
              - name: var_name
                type: RZ_CMD_ARG_TYPE_GLOBAL_VAR
                optional: true
          - name: avga
            summary: add global variable manually
            type: RZ_CMD_DESC_TYPE_ARGV
            cname: analysis_global_variable_add
            args:
              - name: var_name
                type: RZ_CMD_ARG_TYPE_STRING
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
              - name: type
                type: RZ_CMD_ARG_TYPE_ANY_TYPE
          - name: avgd
            summary: delete the global variable at the addr
            type: RZ_CMD_DESC_TYPE_ARGV
            cname: analysis_global_variable_delete_byaddr
            args:
              - name: addr
                type: RZ_CMD_ARG_TYPE_RZNUM
          - name: avgm
            summary: delete global variable with name
            type: RZ_CMD_DESC_TYPE_ARGV
            cname: analysis_global_variable_delete_byname
            args:
              - name: name
                type: RZ_CMD_ARG_TYPE_GLOBAL_VAR
          - name: avgn
            summary: rename the global variable
            type: RZ_CMD_DESC_TYPE_ARGV
            cname: analysis_global_variable_rename
            args:
              - name: old_var_name
                type: RZ_CMD_ARG_TYPE_GLOBAL_VAR
              - name: new_var_name
                type: RZ_CMD_ARG_TYPE_STRING
          - name: avgt
            summary: change the global variable type
            type: RZ_CMD_DESC_TYPE_ARGV
            cname: analysis_global_variable_retype
            args:
              - name: var_name
                type: RZ_CMD_ARG_TYPE_GLOBAL_VAR
              - name: type
                type: RZ_CMD_ARG_TYPE_ANY_TYPE
      - name: avr
        summary: try to parse RTTI at vtable addr (see analysis.cpp.abi)
        type: RZ_CMD_DESC_TYPE_ARGV_MODES
        cname: analysis_print_rtti
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
        args: []
      - name: avra
        summary: search for vtables and try to parse RTTI at each of them
        type: RZ_CMD_DESC_TYPE_ARGV_MODES
        cname: analysis_print_rtti_all
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
        args: []
      - name: avrr
        summary: recover class info from all findable RTTI (see ac)
        type: RZ_CMD_DESC_TYPE_ARGV
        cname: analysis_recover_rtti_all
        args: []
      - name: avrD
        summary: demangle a class name from RTTI
        type: RZ_CMD_DESC_TYPE_ARGV
        cname: analysis_rtti_demangle_class_name
        args:
          - name: classname
            type: RZ_CMD_ARG_TYPE_STRING
  - name: ax
    summary: Cross references (xrefs)
    subcommands:
      - name: ax
        summary: Add custom xref to addr from current seek
        cname: analysis_xrefs_set_0
        args:
          - name: addr
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: axc
        summary: Add generic code xref to addr from current seek
        cname: analysis_xrefs_set_c
        args:
          - name: addr
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: axC
        summary: Add call code xref to addr from current seek
        cname: analysis_xrefs_set_C
        args:
          - name: addr
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: axd
        summary: Add data xref to addr from current seek
        cname: analysis_xrefs_set_d
        args:
          - name: addr
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: axs
        summary: Add string xref to addr from current seek
        cname: analysis_xrefs_set_s
        args:
          - name: addr
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: axl
        summary: List all xrefs
        cname: analysis_xrefs_list
        type: RZ_CMD_DESC_TYPE_ARGV_STATE
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
          - RZ_OUTPUT_MODE_QUIET
          - RZ_OUTPUT_MODE_RIZIN
        args: []
      - name: axt
        summary: List xrefs to current seek
        cname: analysis_xrefs_to_list
        type: RZ_CMD_DESC_TYPE_ARGV_STATE
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
          - RZ_OUTPUT_MODE_QUIET
          - RZ_OUTPUT_MODE_RIZIN
        args: []
      - name: axf
        summary: List xrefs from current seek
        cname: analysis_xrefs_from_list
        type: RZ_CMD_DESC_TYPE_ARGV_STATE
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
          - RZ_OUTPUT_MODE_QUIET
          - RZ_OUTPUT_MODE_RIZIN
        args: []
      - name: axtg
        summary: Display commands to generate graphs according to xrefs
        cname: analysis_xrefs_to_graph_cmd
        args: []
      - name: ax-
        summary: Delete xrefs to addr
        cname: analysis_xrefs_del
        args:
          - name: addr
            type: RZ_CMD_ARG_TYPE_RZNUM
          - name: from
            type: RZ_CMD_ARG_TYPE_RZNUM
            optional: true
      - name: ax-*
        summary: Delete all xrefs
        cname: analysis_xrefs_del_all
        args: []
      - name: axm
        summary: Copy xrefs pointing to addr to also point to curseek
        cname: analysis_xrefs_copy
        args:
          - name: addr
            type: RZ_CMD_ARG_TYPE_RZNUM
      - name: axg
        summary: Show xrefs graph to reach function at current seek
        cname: analysis_xrefs_graph
        type: RZ_CMD_DESC_TYPE_ARGV_STATE
        modes:
          - RZ_OUTPUT_MODE_STANDARD
          - RZ_OUTPUT_MODE_JSON
          - RZ_OUTPUT_MODE_RIZIN
        args: []      
