===============
Iter file lines
===============

p8 @@.file

---

(statements
  (iter_file_lines_stmt
    (arged_stmt (cmd_identifier))
    (arg (arg_identifier))))


============
Iter offsets
============

p8 @@=off1 off2

---

(statements
  (iter_offsets_stmt
    (arged_stmt (cmd_identifier))
    (args
      (arg (arg_identifier))
      (arg (arg_identifier)))))


=================
Iter offsetssizes
=================

p8 @@@=off1 sz1 off2 sz2

---

(statements
  (iter_offsetssizes_stmt
    (arged_stmt (cmd_identifier))
    (args
      (arg (arg_identifier))
      (arg (arg_identifier))
      (arg (arg_identifier))
      (arg (arg_identifier)))))


========
Iter hit
========

p8 @@/x 9090

---

(statements
  (iter_hit_stmt
    (arged_stmt (cmd_identifier))
    (arged_stmt (cmd_identifier)
      (args
        (arg (arg_identifier))))))


==================
Iter interpret cmd
==================

p8 @@c:?e hello

---

(statements
  (iter_interpret_stmt
    (arged_stmt (cmd_identifier))
    (arged_stmt (cmd_identifier)
      (args (arg (arg_identifier))))))


===============================
Iter interpret offsetssizes cmd
===============================

p8 @@@c:?e hello 10

---

(statements
  (iter_interpret_offsetssizes_stmt
    (arged_stmt (cmd_identifier))
    (arged_stmt (cmd_identifier)
      (args
        (arg (arg_identifier))
        (arg (arg_identifier))))))


=============
Iter comments
=============

pd @@C
pd @@C:mycomm*

---

(statements
  (iter_comment_stmt
    (arged_stmt (cmd_identifier)))
  (iter_comment_stmt
    (arged_stmt (cmd_identifier))
    (arg (arg_identifier))))


========
Iter dbt
========

p8 4 @@dbt
p8 4 @@dbta
p8 4 @@dbtb
p8 4 @@dbts

---

(statements
  (iter_dbta_stmt
    (arged_stmt (cmd_identifier)
      (args (arg (arg_identifier)))))
  (iter_dbta_stmt
    (arged_stmt (cmd_identifier)
      (args (arg (arg_identifier)))))
  (iter_dbtb_stmt
    (arged_stmt (cmd_identifier)
      (args (arg (arg_identifier)))))
  (iter_dbts_stmt
    (arged_stmt (cmd_identifier)
      (args (arg (arg_identifier))))))


===============
Iter threads
===============

p8 @@t

---

(statements
  (iter_threads_stmt
    (arged_stmt (cmd_identifier))))


===============
Iter basic blocks
===============

p8 @@b

---

(statements
  (iter_bbs_stmt
    (arged_stmt (cmd_identifier))))


===============
Iter instructions
===============

p8 @@i

---

(statements
  (iter_instrs_stmt
    (arged_stmt (cmd_identifier))))


===============
Iter imports
===============

p8 @@ii

---

(statements
  (iter_import_stmt
    (arged_stmt (cmd_identifier))))


===============
Iter sections
===============

p8 @@iS

---

(statements
  (iter_sections_stmt
    (arged_stmt (cmd_identifier))))


===============
Iter segments
===============

p8 @@iSS

---

(statements
  (iter_segments_stmt
    (arged_stmt (cmd_identifier))))


===============
Iter symbols
===============

p8 @@is

---

(statements
  (iter_symbol_stmt
    (arged_stmt (cmd_identifier))))


===============
Iter strings
===============

p8 @@iz

---

(statements
  (iter_string_stmt
    (arged_stmt (cmd_identifier))))


============
Iter flags
============

p8 4 @@f
p8 4 @@f:sym.*

---

(statements
  (iter_flags_stmt
    (arged_stmt (cmd_identifier)
      (args (arg (arg_identifier)))))
  (iter_flags_stmt
    (arged_stmt (cmd_identifier)
      (args (arg (arg_identifier))))
    (arg (arg_identifier))))


===============
Iter functions
===============

p8 @@F
p8 @@F:lib*

---

(statements
  (iter_function_stmt
    (arged_stmt (cmd_identifier)))
  (iter_function_stmt
    (arged_stmt (cmd_identifier))
    (arg (arg_identifier))))


==========
Iter iomap
==========

pd @@om

---

(statements
  (iter_iomap_stmt
    (arged_stmt (cmd_identifier))))


==========
Iter dbgmap
==========

pd @@dm

---

(statements
  (iter_dbgmap_stmt
    (arged_stmt (cmd_identifier))))


=============
Iter register
=============

pd @@r

---

(statements
  (iter_register_stmt
    (arged_stmt (cmd_identifier))))


===============
Iter by step
===============

p8 @@s:0xd000 0xe000 0x100

---

(statements
  (iter_step_stmt
    (arged_stmt (cmd_identifier))
    (args
      (arg (arg_identifier))
      (arg (arg_identifier))
      (arg (arg_identifier)))))


